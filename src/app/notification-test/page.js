// src/app/notifications-test/page.js
'use client';

import { useState } from 'react';
import { useAuth } from '../../contexts/AuthContext';
import ProtectedRoute from '../../components/ProtectedRoute';

export default function NotificationsTestPage() {
  const { user } = useAuth();
  const [isLoading, setIsLoading] = useState(false);
  const [result, setResult] = useState(null);

  const testNotifications = [
    {
      type: 'invitation',
      title: '–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –æ—Ç–ø—É—Å–∫',
      message: '–ê–Ω–Ω–∞ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∞ –≤–∞—Å –≤ –æ—Ç–ø—É—Å–∫ "–û—Ç–¥—ã—Ö –Ω–∞ –ë–∞–ª–∏"',
      buttonText: 'üì® –¢–µ—Å—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è',
      description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø—Ä–∏–Ω—è—Ç–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è'
    },
    {
      type: 'activity_update', 
      title: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–ª–∞–Ω–æ–≤',
      message: '–í –≤–∞—à–µ–º –æ—Ç–ø—É—Å–∫–µ "–ì–æ—Ä–Ω—ã–µ –ø–æ—Ö–æ–¥—ã" –¥–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
      buttonText: 'üîÑ –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è',
      description: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –≤ –ø–ª–∞–Ω–∞—Ö –æ—Ç–ø—É—Å–∫–∞'
    },
    {
      type: 'memory_comment',
      title: '–ù–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π',
      message: '–ò–≤–∞–Ω –ø—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–ª –≤–∞—à–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ',
      buttonText: 'üí¨ –¢–µ—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è',
      description: '–û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –Ω–æ–≤—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö –∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º'
    },
    {
      type: 'info',
      title: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
      message: '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã',
      buttonText: '‚ÑπÔ∏è –¢–µ—Å—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏',
      description: '–ü—Ä–æ—Å—Ç–æ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –±–µ–∑ –¥–µ–π—Å—Ç–≤–∏–π'
    }
  ];

  const sendTestNotification = async (type) => {
    setIsLoading(true);
    setResult(null);
    
    try {
      const response = await fetch('/api/notifications/test', {
        method: 'POST',
        headers: { 
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ type }),
        credentials: 'include'
      });

      const data = await response.json();

      if (response.ok) {
        setResult({
          type: 'success',
          message: `‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ "${type}" —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!`,
          notification: data.notification
        });
      } else {
        setResult({
          type: 'error', 
          message: `‚ùå –û—à–∏–±–∫–∞: ${data.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`
        });
      }
    } catch (error) {
      setResult({
        type: 'error',
        message: `‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: ${error.message}`
      });
    } finally {
      setIsLoading(false);
    }
  };

  const clearResult = () => {
    setResult(null);
  };

  return (
    <ProtectedRoute>
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-cyan-50 py-8">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
          
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <div className="text-center mb-12">
            <h1 className="text-4xl font-bold text-gray-900 mb-4">
              –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
            </h1>
            <p className="text-lg text-gray-600 max-w-2xl mx-auto">
              –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π Breezeway. 
              –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, –∫–∞–∫ –æ–Ω–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è.
            </p>
            {user && (
              <div className="mt-4 inline-flex items-center space-x-2 bg-white px-4 py-2 rounded-full text-sm text-gray-600 shadow-sm">
                <span>–¢–µ—Å—Ç–∏—Ä—É–µ—Ç–µ –∫–∞–∫:</span>
                <span className="font-semibold text-emerald-600">{user.name}</span>
                <span className="text-gray-400">‚Ä¢</span>
                <span className="text-gray-500">{user.email}</span>
              </div>
            )}
          </div>

          {/* –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏ */}
          {result && (
            <div className={`mb-6 p-4 rounded-xl border-2 ${
              result.type === 'success' 
                ? 'bg-green-50 border-green-200 text-green-800' 
                : 'bg-red-50 border-red-200 text-red-800'
            }`}>
              <div className="flex justify-between items-start">
                <div className="flex-1">
                  <p className="font-semibold">{result.message}</p>
                  {result.notification && (
                    <div className="mt-2 text-sm opacity-80">
                      <p><strong>–¢–∏–ø:</strong> {result.notification.type}</p>
                      <p><strong>–ó–∞–≥–æ–ª–æ–≤–æ–∫:</strong> {result.notification.title}</p>
                      <p><strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong> {result.notification.message}</p>
                    </div>
                  )}
                </div>
                <button
                  onClick={clearResult}
                  className="ml-4 p-1 hover:opacity-70 transition-opacity"
                >
                  ‚úï
                </button>
              </div>
            </div>
          )}

          {/* –ö–Ω–æ–ø–∫–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-12">
            {testNotifications.map((notification) => (
              <div
                key={notification.type}
                className="bg-white rounded-2xl shadow-lg border border-gray-200 p-6 hover:shadow-xl transition-all duration-300"
              >
                <div className="flex flex-col h-full">
                  <div className="flex-1">
                    <h3 className="text-xl font-semibold text-gray-900 mb-3">
                      {notification.title}
                    </h3>
                    <p className="text-gray-600 mb-2">
                      {notification.description}
                    </p>
                    <div className="text-sm text-gray-500 bg-gray-50 rounded-lg p-3">
                      <strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong> "{notification.message}"
                    </div>
                  </div>
                  
                  <button
                    onClick={() => sendTestNotification(notification.type)}
                    disabled={isLoading}
                    className="w-full mt-4 bg-gradient-to-r from-emerald-500 to-teal-400 text-white py-3 px-6 rounded-xl font-semibold hover:from-emerald-600 hover:to-teal-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5"
                  >
                    {isLoading ? (
                      <div className="flex items-center justify-center">
                        <div className="w-5 h-5 border-t-2 border-white rounded-full animate-spin mr-2"></div>
                        –û—Ç–ø—Ä–∞–≤–∫–∞...
                      </div>
                    ) : (
                      notification.buttonText
                    )}
                  </button>
                </div>
              </div>
            ))}
          </div>

          {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è */}
          <div className="bg-white rounded-2xl shadow-lg border border-gray-200 p-6">
            <h2 className="text-2xl font-bold text-gray-900 mb-4">–ö–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç?</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div className="space-y-3">
                <h3 className="font-semibold text-gray-900">üì± –ù–∞ –º–æ–±–∏–ª—å–Ω–æ–º:</h3>
                <ul className="text-gray-600 space-y-2">
                  <li>‚Ä¢ –û—Ç–∫—Ä–æ–π—Ç–µ –º–µ–Ω—é (—Ç—Ä–∏ –ª–∏–Ω–∏–∏ –≤–≤–µ—Ä—Ö—É)</li>
                  <li>‚Ä¢ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–∫–æ–Ω–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π üîî</li>
                  <li>‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—è–≤–∏–≤—à–∏–µ—Å—è —Ç–µ—Å—Ç–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</li>
                </ul>
              </div>
              <div className="space-y-3">
                <h3 className="font-semibold text-gray-900">üíª –ù–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ:</h3>
                <ul className="text-gray-600 space-y-2">
                  <li>‚Ä¢ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–∫–æ–Ω–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É</li>
                  <li>‚Ä¢ –û—Ç–∫—Ä–æ–µ—Ç—Å—è –ø–∞–Ω–µ–ª—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</li>
                  <li>‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</li>
                </ul>
              </div>
            </div>
          </div>

          {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ */}
          <div className="mt-8 text-center">
            <p className="text-gray-500 text-sm">
              –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫—Ä–æ–π—Ç–µ —Ü–µ–Ω—Ç—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–∏–∫–æ–Ω–∫–∞ –∫–æ–ª–æ–∫–æ–ª—å—á–∏–∫–∞ –≤ —à–∞–ø–∫–µ —Å–∞–π—Ç–∞)
            </p>
          </div>

        </div>
      </div>
    </ProtectedRoute>
  );
}
