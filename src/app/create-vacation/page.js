// src/app/create-vacation/page.js
'use client';

import { useState } from 'react';
import { useRouter } from 'next/navigation';
import ProtectedRoute from '../../components/ProtectedRoute';
import Notification from '../../components/Notification';

export default function CreateVacationPage() {
  const router = useRouter();
  const [formData, setFormData] = useState({
    title: '',
    description: '',
    destination: '',
    startDate: '',
    endDate: ''
  });
  const [errors, setErrors] = useState({});
  const [isLoading, setIsLoading] = useState(false);
  const [notification, setNotification] = useState({ message: '', type: '' });

  const validateForm = () => {
    const newErrors = {};

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏—è
    if (!formData.title.trim()) {
      newErrors.title = '–ù–∞–∑–≤–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ';
    } else if (formData.title.length < 2) {
      newErrors.title = '–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞';
    } else if (formData.title.length > 100) {
      newErrors.title = '–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 100 —Å–∏–º–≤–æ–ª–æ–≤';
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞—Ç
    if (!formData.startDate) {
      newErrors.startDate = '–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞';
    }

    if (!formData.endDate) {
      newErrors.endDate = '–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞';
    }

    if (formData.startDate && formData.endDate) {
      const start = new Date(formData.startDate);
      const end = new Date(formData.endDate);
      const today = new Date();
      today.setHours(0, 0, 0, 0);

      if (start < today) {
        newErrors.startDate = '–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –ø—Ä–æ—à–ª–æ–º';
      }

      if (end < start) {
        newErrors.endDate = '–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–Ω—å—à–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞';
      }

      if ((end - start) / (1000 * 60 * 60 * 24) > 365) {
        newErrors.endDate = '–û—Ç–ø—É—Å–∫ –Ω–µ –º–æ–∂–µ—Ç –¥–ª–∏—Ç—å—Å—è –±–æ–ª—å—à–µ –≥–æ–¥–∞';
      }
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Å—Ç–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
    if (formData.destination && formData.destination.length > 200) {
      newErrors.destination = '–ú–µ—Å—Ç–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 200 —Å–∏–º–≤–æ–ª–æ–≤';
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è
    if (formData.description && formData.description.length > 500) {
      newErrors.description = '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 500 —Å–∏–º–≤–æ–ª–æ–≤';
    }

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));

    // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—è
    if (errors[name]) {
      setErrors(prev => ({
        ...prev,
        [name]: ''
      }));
    }
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    console.log('üîÑ –ù–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç–ø—É—Å–∫–∞...');
    console.log('üìã –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:', formData);

    if (!validateForm()) {
      console.log('‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞:', errors);
      return;
    }

    setIsLoading(true);

    try {
      const response = await fetch('/api/vacations', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(formData),
        credentials: 'include'
      });

      console.log('üì° –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', {
        status: response.status,
        statusText: response.statusText,
        ok: response.ok
      });

      const data = await response.json();
      console.log('üìÑ –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:', data);

      if (response.ok) {
        console.log('‚úÖ –û—Ç–ø—É—Å–∫ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω:', data.id);
        
        setNotification({ 
          message: '–û—Ç–ø—É—Å–∫ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º...', 
          type: 'success' 
        });
        
        // –î–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É–≤–∏–¥–µ—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        setTimeout(() => {
          router.push(`/vacations/${data.id}`);
        }, 1500);
      } else {
        console.log('‚ùå –û—à–∏–±–∫–∞ API:', data.message);
        setNotification({ 
          message: data.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç–ø—É—Å–∫–∞', 
          type: 'error' 
        });
      }
    } catch (error) {
      console.error('‚ùå –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞:', error);
      setNotification({ 
        message: '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', 
        type: 'error' 
      });
    } finally {
      setIsLoading(false);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –¥–∞—Ç—ã (—Å–µ–≥–æ–¥–Ω—è)
  const getMinDate = () => {
    const today = new Date();
    return today.toISOString().split('T')[0];
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–∞—Ç—ã (–≥–æ–¥ –æ—Ç —Å–µ–≥–æ–¥–Ω—è)
  const getMaxDate = () => {
    const nextYear = new Date();
    nextYear.setFullYear(nextYear.getFullYear() + 1);
    return nextYear.toISOString().split('T')[0];
  };

  return (
    <ProtectedRoute>
      <Notification 
        message={notification.message} 
        type={notification.type}
        onClose={() => setNotification({ message: '', type: '' })}
      />

      <div className="min-h-screen bg-gray-50 py-8">
        <div className="max-w-2xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="bg-white rounded-2xl shadow-lg p-8">
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
            <div className="mb-8 text-center">
              <h1 className="text-3xl font-bold text-gray-900 mb-2">
                –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –æ—Ç–ø—É—Å–∫
              </h1>
              <p className="text-gray-600">
                –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–º —Å–ª–µ–¥—É—é—â–µ–º –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–∏
              </p>
            </div>

            <form onSubmit={handleSubmit} className="space-y-6">
              {/* –ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–ø—É—Å–∫–∞ */}
              <div>
                <label htmlFor="title" className="block text-sm font-medium text-gray-700 mb-2">
                  –ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–ø—É—Å–∫–∞ *
                </label>
                <input
                  type="text"
                  id="title"
                  name="title"
                  value={formData.title}
                  onChange={handleChange}
                  required
                  maxLength={100}
                  className={`w-full px-4 py-3 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent transition duration-200 ${
                    errors.title ? 'border-red-500' : 'border-gray-300'
                  }`}
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –û—Ç–ø—É—Å–∫ –≤ –≥–æ—Ä–∞—Ö, –ü–ª—è–∂–Ω—ã–π –æ—Ç–¥—ã—Ö –Ω–∞ –ë–∞–ª–∏..."
                />
                <div className="flex justify-between mt-1">
                  {errors.title ? (
                    <p className="text-sm text-red-600">{errors.title}</p>
                  ) : (
                    <div className="text-sm text-gray-500">
                      –ú–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞
                    </div>
                  )}
                  <div className="text-sm text-gray-500">
                    {formData.title.length}/100
                  </div>
                </div>
              </div>

              {/* –ú–µ—Å—Ç–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è */}
              <div>
                <label htmlFor="destination" className="block text-sm font-medium text-gray-700 mb-2">
                  –ú–µ—Å—Ç–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
                </label>
                <input
                  type="text"
                  id="destination"
                  name="destination"
                  value={formData.destination}
                  onChange={handleChange}
                  maxLength={200}
                  className={`w-full px-4 py-3 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent transition duration-200 ${
                    errors.destination ? 'border-red-500' : 'border-gray-300'
                  }`}
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ü–∞—Ä–∏–∂, –§—Ä–∞–Ω—Ü–∏—è –∏–ª–∏ –¢–∞–π–ª–∞–Ω–¥, –ü—Ö—É–∫–µ—Ç..."
                />
                <div className="flex justify-between mt-1">
                  {errors.destination ? (
                    <p className="text-sm text-red-600">{errors.destination}</p>
                  ) : (
                    <div></div>
                  )}
                  <div className="text-sm text-gray-500">
                    {formData.destination.length}/200
                  </div>
                </div>
              </div>

              {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
              <div>
                <label htmlFor="description" className="block text-sm font-medium text-gray-700 mb-2">
                  –û–ø–∏—Å–∞–Ω–∏–µ
                </label>
                <textarea
                  id="description"
                  name="description"
                  value={formData.description}
                  onChange={handleChange}
                  rows={4}
                  maxLength={500}
                  className={`w-full px-4 py-3 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent transition duration-200 ${
                    errors.description ? 'border-red-500' : 'border-gray-300'
                  }`}
                  placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–∏—Ö –ø–ª–∞–Ω–∞—Ö, —Ü–µ–ª—è—Ö –ø–æ–µ–∑–¥–∫–∏ –∏–ª–∏ –æ—Å–æ–±—ã—Ö –ø–æ–∂–µ–ª–∞–Ω–∏—è—Ö..."
                />
                <div className="flex justify-between mt-1">
                  {errors.description ? (
                    <p className="text-sm text-red-600">{errors.description}</p>
                  ) : (
                    <div></div>
                  )}
                  <div className="text-sm text-gray-500">
                    {formData.description.length}/500
                  </div>
                </div>
              </div>

              {/* –î–∞—Ç—ã */}
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label htmlFor="startDate" className="block text-sm font-medium text-gray-700 mb-2">
                    –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ *
                  </label>
                  <input
                    type="date"
                    id="startDate"
                    name="startDate"
                    value={formData.startDate}
                    onChange={handleChange}
                    required
                    min={getMinDate()}
                    max={getMaxDate()}
                    className={`w-full px-4 py-3 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent transition duration-200 ${
                      errors.startDate ? 'border-red-500' : 'border-gray-300'
                    }`}
                  />
                  {errors.startDate && (
                    <p className="mt-1 text-sm text-red-600">{errors.startDate}</p>
                  )}
                </div>

                <div>
                  <label htmlFor="endDate" className="block text-sm font-medium text-gray-700 mb-2">
                    –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è *
                  </label>
                  <input
                    type="date"
                    id="endDate"
                    name="endDate"
                    value={formData.endDate}
                    onChange={handleChange}
                    required
                    min={formData.startDate || getMinDate()}
                    max={getMaxDate()}
                    className={`w-full px-4 py-3 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent transition duration-200 ${
                      errors.endDate ? 'border-red-500' : 'border-gray-300'
                    }`}
                  />
                  {errors.endDate && (
                    <p className="mt-1 text-sm text-red-600">{errors.endDate}</p>
                  )}
                </div>
              </div>

              {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ –ø–æ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ */}
              {formData.startDate && formData.endDate && !errors.startDate && !errors.endDate && (
                <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
                  <div className="flex items-center">
                    <svg className="w-5 h-5 text-blue-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                    <span className="text-blue-800 text-sm">
                      –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ—Ç–ø—É—Å–∫–∞: {' '}
                      {Math.ceil((new Date(formData.endDate) - new Date(formData.startDate)) / (1000 * 60 * 60 * 24)) + 1} –¥–Ω–µ–π
                    </span>
                  </div>
                </div>
              )}

              {/* –ö–Ω–æ–ø–∫–∏ */}
              <div className="flex flex-col sm:flex-row gap-4 pt-6">
                <button
                  type="button"
                  onClick={() => router.push('/my-vacations')}
                  disabled={isLoading}
                  className="flex-1 border border-gray-300 text-gray-700 py-3 px-6 rounded-lg font-medium hover:border-gray-400 hover:bg-gray-50 transition duration-200 disabled:opacity-50 disabled:cursor-not-allowed"
                >
                  –û—Ç–º–µ–Ω–∞
                </button>
                <button
                  type="submit"
                  disabled={isLoading}
                  className="flex-1 bg-gradient-to-r from-emerald-600 to-teal-500 text-white py-3 px-6 rounded-lg font-medium hover:from-emerald-700 hover:to-teal-600 transition duration-200 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2 shadow-lg hover:shadow-xl"
                >
                  {isLoading ? (
                    <>
                      <div className="w-5 h-5 border-t-2 border-white rounded-full animate-spin"></div>
                      <span>–°–æ–∑–¥–∞–Ω–∏–µ...</span>
                    </>
                  ) : (
                    <>
                      <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 4v16m8-8H4" />
                      </svg>
                      <span>–°–æ–∑–¥–∞—Ç—å –æ—Ç–ø—É—Å–∫</span>
                    </>
                  )}
                </button>
              </div>

              {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ */}
              <div className="text-center">
                <p className="text-sm text-gray-500">
                  –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –≤—ã —Å–º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –ø–ª–∞–Ω—ã –∏ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è
                </p>
              </div>
            </form>
          </div>
        </div>
      </div>
    </ProtectedRoute>
  );
}
