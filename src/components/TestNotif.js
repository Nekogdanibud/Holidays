// components/NotificationTester.js
'use client';
import { useState } from 'react';

export default function NotificationTester() {
  const [isLoading, setIsLoading] = useState(false);

  const testNotifications = [
    {
      type: 'invitation',
      title: '–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –æ—Ç–ø—É—Å–∫',
      message: '–ê–Ω–Ω–∞ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∞ –≤–∞—Å –≤ –æ—Ç–ø—É—Å–∫ "–û—Ç–¥—ã—Ö –Ω–∞ –ë–∞–ª–∏"',
      buttonText: 'üì® –¢–µ—Å—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è'
    },
    {
      type: 'activity_update', 
      title: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–ª–∞–Ω–æ–≤',
      message: '–í –≤–∞—à–µ–º –æ—Ç–ø—É—Å–∫–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
      buttonText: 'üîÑ –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è'
    },
    {
      type: 'memory_comment',
      title: '–ù–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π',
      message: '–ò–≤–∞–Ω –ø—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–ª –≤–∞—à–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ',
      buttonText: 'üí¨ –¢–µ—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è'
    },
    {
      type: 'info',
      title: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
      message: '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
      buttonText: '‚ÑπÔ∏è –¢–µ—Å—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏'
    }
  ];

  const sendTest = async (type) => {
    setIsLoading(true);
    try {
      const response = await fetch('/api/notifications/test', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ type }),
        credentials: 'include'
      });

      if (response.ok) {
        console.log(`–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ "${type}" –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ`);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞:', error);
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="bg-white rounded-lg shadow p-6">
      <h3 className="text-lg font-semibold mb-4">–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</h3>
      <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
        {testNotifications.map((notification) => (
          <button
            key={notification.type}
            onClick={() => sendTest(notification.type)}
            disabled={isLoading}
            className="bg-gray-100 hover:bg-gray-200 text-gray-800 px-4 py-3 rounded-lg transition disabled:opacity-50"
          >
            {notification.buttonText}
          </button>
        ))}
      </div>
    </div>
  );
}
