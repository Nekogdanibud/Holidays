// src/components/vacation/CreateActivityModal.js
'use client';

import { useState } from 'react';

export default function CreateActivityModal({ vacation, onClose, onCreate }) {
  const [formData, setFormData] = useState({
    title: '',
    description: '',
    date: '',
    type: 'ACTIVITY',
    startTime: '',
    endTime: '',
    cost: '',
    notes: '',
    priority: 'MEDIUM',
    status: 'PLANNED'
  });
  const [isLoading, setIsLoading] = useState(false);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    if (!formData.title.trim() || !formData.date) {
      alert('–ù–∞–∑–≤–∞–Ω–∏–µ –∏ –¥–∞—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã');
      return;
    }

    setIsLoading(true);
    try {
      const response = await fetch('/api/activities', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          ...formData,
          vacationId: vacation.id
        }),
        credentials: 'include'
      });

      if (response.ok) {
        const newActivity = await response.json();
        onCreate(newActivity);
        onClose();
      } else {
        const error = await response.json();
        alert(error.message || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:', error);
      alert('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏');
    } finally {
      setIsLoading(false);
    }
  };

  const activityTypes = [
    { value: 'FLIGHT', label: '‚úàÔ∏è –ü–µ—Ä–µ–ª–µ—Ç', emoji: '‚úàÔ∏è' },
    { value: 'HOTEL', label: 'üè® –û—Ç–µ–ª—å', emoji: 'üè®' },
    { value: 'RESTAURANT', label: 'üçΩÔ∏è –†–µ—Å—Ç–æ—Ä–∞–Ω', emoji: 'üçΩÔ∏è' },
    { value: 'ATTRACTION', label: 'üèõÔ∏è –î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å', emoji: 'üèõÔ∏è' },
    { value: 'TRANSPORTATION', label: 'üöó –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç', emoji: 'üöó' },
    { value: 'EVENT', label: 'üé≠ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ', emoji: 'üé≠' },
    { value: 'ACTIVITY', label: 'üéØ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', emoji: 'üéØ' },
    { value: 'SHOPPING', label: 'üõçÔ∏è –®–æ–ø–ø–∏–Ω–≥', emoji: 'üõçÔ∏è' },
    { value: 'BEACH', label: 'üèñÔ∏è –ü–ª—è–∂', emoji: 'üèñÔ∏è' },
    { value: 'HIKING', label: 'ü•æ –ü–æ—Ö–æ–¥', emoji: 'ü•æ' },
    { value: 'MUSEUM', label: 'üñºÔ∏è –ú—É–∑–µ–π', emoji: 'üñºÔ∏è' },
    { value: 'CONCERT', label: 'üéµ –ö–æ–Ω—Ü–µ—Ä—Ç', emoji: 'üéµ' },
    { value: 'SPORTS', label: '‚öΩ –°–ø–æ—Ä—Ç', emoji: '‚öΩ' }
  ];

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
      <div className="bg-white rounded-2xl p-6 w-full max-w-2xl max-h-[90vh] overflow-y-auto">
        <div className="flex justify-between items-center mb-6">
          <h2 className="text-2xl font-bold text-gray-900">–°–æ–∑–¥–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h2>
          <button
            onClick={onClose}
            className="text-gray-500 hover:text-gray-700 text-2xl"
            disabled={isLoading}
          >
            √ó
          </button>
        </div>

        <form onSubmit={handleSubmit} className="space-y-6">
          {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ù–∞–∑–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ *
              </label>
              <input
                type="text"
                name="title"
                value={formData.title}
                onChange={handleChange}
                required
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –≠–∫—Å–∫—É—Ä—Å–∏—è –ø–æ —Å—Ç–∞—Ä–æ–º—É –≥–æ—Ä–æ–¥—É"
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –¢–∏–ø –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ *
              </label>
              <select
                name="type"
                value={formData.type}
                onChange={handleChange}
                required
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              >
                {activityTypes.map(type => (
                  <option key={type.value} value={type.value}>
                    {type.emoji} {type.label}
                  </option>
                ))}
              </select>
            </div>
          </div>

          {/* –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –î–∞—Ç–∞ *
              </label>
              <input
                type="date"
                name="date"
                value={formData.date}
                onChange={handleChange}
                required
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞
              </label>
              <input
                type="time"
                name="startTime"
                value={formData.startTime}
                onChange={handleChange}
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è
              </label>
              <input
                type="time"
                name="endTime"
                value={formData.endTime}
                onChange={handleChange}
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              />
            </div>
          </div>

          {/* –û–ø–∏—Å–∞–Ω–∏–µ –∏ –∑–∞–º–µ—Ç–∫–∏ */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –û–ø–∏—Å–∞–Ω–∏–µ
            </label>
            <textarea
              name="description"
              value={formData.description}
              onChange={handleChange}
              rows={3}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏..."
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ó–∞–º–µ—Ç–∫–∏
            </label>
            <textarea
              name="notes"
              value={formData.notes}
              onChange={handleChange}
              rows={2}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏..."
            />
          </div>

          {/* –°—Ç–æ–∏–º–æ—Å—Ç—å –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –°—Ç–æ–∏–º–æ—Å—Ç—å
              </label>
              <input
                type="number"
                name="cost"
                value={formData.cost}
                onChange={handleChange}
                min="0"
                step="0.01"
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
                placeholder="0.00"
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç
              </label>
              <select
                name="priority"
                value={formData.priority}
                onChange={handleChange}
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              >
                <option value="LOW">üî¥ –ù–∏–∑–∫–∏–π</option>
                <option value="MEDIUM">üü° –°—Ä–µ–¥–Ω–∏–π</option>
                <option value="HIGH">üü¢ –í—ã—Å–æ–∫–∏–π</option>
              </select>
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –°—Ç–∞—Ç—É—Å
              </label>
              <select
                name="status"
                value={formData.status}
                onChange={handleChange}
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              >
                <option value="PLANNED">üìÖ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ</option>
                <option value="CONFIRMED">‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ</option>
                <option value="IN_PROGRESS">üîÑ –í –ø—Ä–æ—Ü–µ—Å—Å–µ</option>
                <option value="COMPLETED">üèÅ –ó–∞–≤–µ—Ä—à–µ–Ω–æ</option>
                <option value="CANCELLED">‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ</option>
              </select>
            </div>
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
          <div className="flex space-x-3 pt-4">
            <button
              type="button"
              onClick={onClose}
              disabled={isLoading}
              className="flex-1 px-6 py-3 text-gray-700 bg-gray-200 rounded-lg hover:bg-gray-300 transition duration-200 disabled:opacity-50"
            >
              –û—Ç–º–µ–Ω–∞
            </button>
            <button
              type="submit"
              disabled={isLoading}
              className="flex-1 px-6 py-3 bg-emerald-500 text-white rounded-lg hover:bg-emerald-600 transition duration-200 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2"
            >
              {isLoading ? (
                <>
                  <div className="w-4 h-4 border-t-2 border-white rounded-full animate-spin"></div>
                  <span>–°–æ–∑–¥–∞–Ω–∏–µ...</span>
                </>
              ) : (
                <span>–°–æ–∑–¥–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</span>
              )}
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}
