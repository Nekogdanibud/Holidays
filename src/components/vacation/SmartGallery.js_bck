// src/components/vacation/SmartGallery.js
'use client';

import { useState, useEffect } from 'react';
import MemoryGrid from './MemoryGrid';
import PhotoViewerModal from '../activities/PhotoViewerModal';

export default function SmartGallery({ vacationId }) {
  const [view, setView] = useState('all');
  const [data, setData] = useState(null);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState(null);
  const [photoViewer, setPhotoViewer] = useState({
    isOpen: false,
    initialIndex: 0,
    memories: []
  });

  useEffect(() => {
    fetchGallery();
  }, [vacationId, view]);

  const fetchGallery = async () => {
    try {
      setIsLoading(true);
      setError(null);
      
      const response = await fetch(`/api/vacations/${vacationId}/gallery?view=${view}`, {
        credentials: 'include',
        cache: 'no-store'
      });
      
      if (!response.ok) {
        throw new Error(`HTTP ${response.status}`);
      }
      
      const result = await response.json();
      setData(result);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–∞–ª–µ—Ä–µ–∏:', error);
      setError(error.message);
    } finally {
      setIsLoading(false);
    }
  };

  const getViewTitle = () => {
    switch (view) {
      case 'all': return '–í—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏';
      case 'capture': return '–Ø—Ä–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã';
      case 'activities': return '–ü–æ –ø–ª–∞–Ω–∞–º';
      default: return '–ì–∞–ª–µ—Ä–µ—è';
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –í–°–ï–• —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä—â–∏–∫–∞
  const getAllMemoriesForViewer = () => {
    if (!data) return [];

    try {
      console.log('üñºÔ∏è –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä—â–∏–∫–∞ –∏–∑ –¥–∞–Ω–Ω—ã—Ö:', {
        hasByDay: !!data.memories?.byDay,
        hasByActivity: !!data.memories?.byActivity,
        byDayCount: data.memories?.byDay ? Object.values(data.memories.byDay).flat().length : 0,
        byActivityCount: data.memories?.byActivity ? Object.values(data.memories.byActivity).flatMap(a => a.memories).length : 0
      });

      // –í–°–ï–ì–î–ê –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –≤–∫–ª–∞–¥–∫–∏
      const allMemories = [];
      const seenIds = new Set();
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –∏–∑ byDay (–æ–±—ã—á–Ω—ã–µ —Ñ–æ—Ç–æ)
      if (data.memories?.byDay) {
        Object.values(data.memories.byDay).forEach(dayMemories => {
          if (Array.isArray(dayMemories)) {
            dayMemories.forEach(memory => {
              if (memory?.id && !seenIds.has(memory.id)) {
                seenIds.add(memory.id);
                allMemories.push(memory);
              }
            });
          }
        });
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –∏–∑ byActivity (—Ñ–æ—Ç–æ –∏–∑ –ø–ª–∞–Ω–æ–≤)
      if (data.memories?.byActivity) {
        Object.values(data.memories.byActivity).forEach(activityData => {
          if (activityData?.memories && Array.isArray(activityData.memories)) {
            activityData.memories.forEach(memory => {
              if (memory?.id && !seenIds.has(memory.id)) {
                seenIds.add(memory.id);
                allMemories.push(memory);
              }
            });
          }
        });
      }
      
      console.log('üì∏ –ò—Ç–æ–≥–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä—â–∏–∫–∞:', allMemories.length, '—Ñ–æ—Ç–æ');
      return allMemories;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –º–∞—Å—Å–∏–≤–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π:', error);
      return [];
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ç–µ–∫—É—â–µ–π –≤–∫–ª–∞–¥–∫–µ
  const getDisplayData = () => {
    if (!data) return null;

    try {
      switch (view) {
        case 'all':
          return {
            type: 'byDay',
            data: data.memories?.byDay || {}
          };
        
        case 'capture':
          const captureActivities = {};
          
          if (data.memories?.byActivity) {
            Object.entries(data.memories.byActivity).forEach(([activityId, activityData]) => {
              const captureMemories = activityData?.memories?.filter(memory => memory?.captureType);
              if (captureMemories?.length > 0) {
                captureActivities[activityId] = {
                  ...activityData,
                  memories: captureMemories
                };
              }
            });
          }
          
          return {
            type: 'byActivity',
            data: captureActivities
          };
        
        case 'activities':
          return {
            type: 'byActivity',
            data: data.memories?.byActivity || {}
          };
        
        default:
          return null;
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error);
      return null;
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
  const handlePhotoClick = (memory, contextMemories = []) => {
    try {
      console.log('üéØ –ö–ª–∏–∫ –ø–æ —Ñ–æ—Ç–æ –≤ –≥–∞–ª–µ—Ä–µ–µ:', {
        memoryId: memory?.id,
        memoryTitle: memory?.title,
        clickedMemory: memory,
        contextMemoriesCount: contextMemories?.length
      });

      // –ü–æ–ª—É—á–∞–µ–º –í–°–ï —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–∑ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
      const allMemories = getAllMemoriesForViewer();
      console.log('üì∏ –í—Å–µ–≥–æ —Ñ–æ—Ç–æ –≤ –≥–∞–ª–µ—Ä–µ–µ:', allMemories.length);
      console.log('üìã –í—Å–µ —Ñ–æ—Ç–æ IDs:', allMemories.map(m => m.id));

      // –ò—â–µ–º –∏–Ω–¥–µ–∫—Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤–æ –í–°–ï–• —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è—Ö
      let initialIndex = allMemories.findIndex(m => m?.id === memory?.id);
      
      console.log('üîç –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ –∏–Ω–¥–µ–∫—Å–∞ –ø–æ ID:', initialIndex);
      
      if (initialIndex === -1) {
        console.warn('‚ö†Ô∏è –§–æ—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –æ–±—â–µ–º –º–∞—Å—Å–∏–≤–µ –ø–æ ID, –∏—â–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã');
        
        // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ imageUrl –µ—Å–ª–∏ ID –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç
        if (memory?.imageUrl) {
          initialIndex = allMemories.findIndex(m => m?.imageUrl === memory?.imageUrl);
          console.log('üñºÔ∏è –ü–æ–∏—Å–∫ –ø–æ imageUrl:', initialIndex);
        }
        
        // –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –Ω–µ –Ω–∞—à–ª–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–Ω–¥–µ–∫—Å –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        if (initialIndex === -1 && contextMemories?.length > 0) {
          // –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–≤—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤ –æ–±—â–µ–º –º–∞—Å—Å–∏–≤–µ
          const firstContextMemory = contextMemories[0];
          if (firstContextMemory?.id) {
            initialIndex = allMemories.findIndex(m => m?.id === firstContextMemory?.id);
            console.log('üìÇ –ü–æ–∏—Å–∫ –ø–æ –ø–µ—Ä–≤–æ–π —Ñ–æ—Ç–æ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞:', initialIndex);
          }
        }
      }

      if (initialIndex === -1) {
        console.warn('‚ö†Ô∏è –§–æ—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å 0');
        initialIndex = 0;
      }

      console.log('üìå –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ç–æ —Å –∏–Ω–¥–µ–∫—Å–æ–º:', initialIndex, 'ID:', allMemories[initialIndex]?.id);
      
      setPhotoViewer({
        isOpen: true,
        initialIndex,
        memories: allMemories
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:', error);
    }
  };

  // –ü–æ–ª—É—á–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ –¥–ª—è –∫–∞–∂–¥–æ–π –≤–∫–ª–∞–¥–∫–∏
  const getTotalCount = () => {
    if (!data) return 0;

    try {
      switch (view) {
        case 'all':
          return data.total || 0;
        
        case 'capture':
          if (data.memories?.byActivity) {
            return Object.values(data.memories.byActivity)
              .reduce((total, activityData) => 
                total + (activityData?.memories?.filter(m => m?.captureType)?.length || 0), 0
              );
          }
          return 0;
        
        case 'activities':
          if (data.memories?.byActivity) {
            return Object.values(data.memories.byActivity)
              .reduce((total, activityData) => 
                total + (activityData?.memories?.length || 0), 0
              );
          }
          return 0;
        
        default:
          return 0;
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Å—á–µ—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π:', error);
      return 0;
    }
  };

  if (error) {
    return (
      <div className="bg-white rounded-2xl shadow-lg p-6">
        <div className="text-center text-red-600 py-8">
          <div className="w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4">
            <span className="text-2xl">‚ö†Ô∏è</span>
          </div>
          <h3 className="text-lg font-semibold mb-2">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–∞–ª–µ—Ä–µ–∏</h3>
          <p className="text-sm mb-4">{error}</p>
          <button 
            onClick={fetchGallery}
            className="bg-emerald-500 text-white px-6 py-2 rounded-lg hover:bg-emerald-600 transition duration-200"
          >
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </button>
        </div>
      </div>
    );
  }

  if (isLoading) {
    return (
      <div className="bg-white rounded-2xl shadow-lg p-6">
        <div className="animate-pulse">
          <div className="h-8 bg-gray-200 rounded w-1/3 mb-6"></div>
          <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
            {[...Array(8)].map((_, i) => (
              <div key={i} className="aspect-square bg-gray-200 rounded-lg"></div>
            ))}
          </div>
        </div>
      </div>
    );
  }

  if (!data) {
    return (
      <div className="bg-white rounded-2xl shadow-lg p-6">
        <div className="text-center text-gray-500 py-8">
          <div className="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
            <span className="text-2xl">üì∏</span>
          </div>
          <p>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≥–∞–ª–µ—Ä–µ—é</p>
        </div>
      </div>
    );
  }

  const displayData = getDisplayData();
  const totalCount = getTotalCount();

  return (
    <div className="bg-white rounded-2xl shadow-lg p-6">
      <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-6">
        <h2 className="text-2xl font-bold text-gray-900 mb-4 sm:mb-0">
          {getViewTitle()} ({totalCount})
        </h2>
        
        <div className="flex space-x-2 bg-gray-100 p-1 rounded-lg">
          {[
            { id: 'all', label: '–í—Å–µ —Ñ–æ—Ç–æ', icon: 'üñºÔ∏è' },
            { id: 'capture', label: '–Ø—Ä–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã', icon: '‚≠ê' },
            { id: 'activities', label: '–ü–æ –ø–ª–∞–Ω–∞–º', icon: 'üìÖ' }
          ].map((tab) => (
            <button
              key={tab.id}
              onClick={() => setView(tab.id)}
              className={`px-3 py-2 rounded-md text-sm font-medium transition-colors flex items-center space-x-2 ${
                view === tab.id
                  ? 'bg-white text-gray-900 shadow-sm'
                  : 'text-gray-600 hover:text-gray-900'
              }`}
            >
              <span>{tab.icon}</span>
              <span className="hidden sm:inline">{tab.label}</span>
            </button>
          ))}
        </div>
      </div>

      {/* –í—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ - –ø–æ –¥–Ω—è–º */}
      {view === 'all' && displayData?.type === 'byDay' && (
        <div className="space-y-8">
          {Object.entries(displayData.data).map(([date, dayMemories]) => (
            <div key={date} className="space-y-4">
              <h3 className="font-semibold text-lg text-gray-900 border-b pb-2">
                {new Date(date).toLocaleDateString('ru-RU', { 
                  weekday: 'long', 
                  day: 'numeric', 
                  month: 'long',
                  year: 'numeric'
                })}
              </h3>
              <MemoryGrid 
                memories={Array.isArray(dayMemories) ? dayMemories : []} 
                showBadge={true}
                onPhotoClick={(memory, index) => handlePhotoClick(memory, dayMemories)}
              />
            </div>
          ))}
        </div>
      )}

      {/* –Ø—Ä–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã - –ø–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º */}
      {view === 'capture' && displayData?.type === 'byActivity' && (
        <div className="space-y-8">
          {Object.entries(displayData.data).map(([activityId, activityData]) => (
            <div key={activityId} className="space-y-4">
              <h3 className="font-semibold text-lg text-gray-900 border-b pb-2">
                {activityData?.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'} 
                <span className="text-sm text-gray-500 ml-2">
                  ({activityData?.memories?.length || 0} —è—Ä–∫–∏—Ö —Ñ–æ—Ç–æ)
                </span>
              </h3>
              <MemoryGrid 
                memories={Array.isArray(activityData?.memories) ? activityData.memories : []} 
                showBadge={true}
                onPhotoClick={(memory, index) => handlePhotoClick(memory, activityData.memories)}
              />
            </div>
          ))}
        </div>
      )}

      {/* –ü–æ –ø–ª–∞–Ω–∞–º - –≤—Å–µ —Ñ–æ—Ç–æ –ø–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º */}
      {view === 'activities' && displayData?.type === 'byActivity' && (
        <div className="space-y-8">
          {Object.entries(displayData.data).map(([activityId, activityData]) => (
            <div key={activityId} className="space-y-4">
              <h3 className="font-semibold text-lg text-gray-900 border-b pb-2">
                {activityData?.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'} 
                <span className="text-sm text-gray-500 ml-2">
                  ({activityData?.memories?.length || 0} —Ñ–æ—Ç–æ)
                </span>
              </h3>
              <MemoryGrid 
                memories={Array.isArray(activityData?.memories) ? activityData.memories : []} 
                showBadge={true}
                onPhotoClick={(memory, index) => handlePhotoClick(memory, activityData.memories)}
              />
            </div>
          ))}
        </div>
      )}

      {totalCount === 0 && (
        <div className="text-center py-12">
          <div className="w-24 h-24 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
            <span className="text-3xl">
              {view === 'all' ? 'üñºÔ∏è' : view === 'capture' ? '‚≠ê' : 'üìÖ'}
            </span>
          </div>
          <h3 className="text-lg font-semibold text-gray-900 mb-2">
            {view === 'all' && '–ü–æ–∫–∞ –Ω–µ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π'}
            {view === 'capture' && '–ü–æ–∫–∞ –Ω–µ—Ç —è—Ä–∫–∏—Ö –º–æ–º–µ–Ω—Ç–æ–≤'}
            {view === 'activities' && '–ü–æ–∫–∞ –Ω–µ—Ç —Ñ–æ—Ç–æ –≤ –ø–ª–∞–Ω–∞—Ö'}
          </h3>
          <p className="text-gray-600 max-w-md mx-auto">
            {view === 'all' && '–ù–∞—á–Ω–∏—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤ –≤–∞—à –æ—Ç–ø—É—Å–∫'}
            {view === 'capture' && '–ó–∞–ø–µ—á–∞—Ç–ª–µ–π—Ç–µ –ø–µ—Ä–≤—ã–µ —è—Ä–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã –≤–∞—à–µ–≥–æ –æ—Ç–ø—É—Å–∫–∞'}
            {view === 'activities' && '–î–æ–±–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º'}
          </p>
        </div>
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π */}
      {photoViewer.isOpen && (
        <PhotoViewerModal
          memories={photoViewer.memories}
          initialIndex={photoViewer.initialIndex}
          activity={null}
          onClose={() => setPhotoViewer({ isOpen: false, initialIndex: 0, memories: [] })}
        />
      )}
    </div>
  );
}
