// components/vacation/VacationManagement.js
'use client';

import { useState } from 'react';
import { useAuth } from '@/contexts/AuthContext';
import { useRouter } from 'next/navigation';
import InviteFriendsModal from './InviteFriendsModal';

export default function VacationManagement({ vacation, onUpdate }) {
  const { user } = useAuth();
  const router = useRouter();
  const [showInviteModal, setShowInviteModal] = useState(false);
  const [showEditModal, setShowEditModal] = useState(false);
  const [isDeleting, setIsDeleting] = useState(false);
  const [isLoading, setIsLoading] = useState(false);

  const isOwner = vacation.userId === user?.id;

  const handleDeleteVacation = async () => {
    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –æ—Ç–ø—É—Å–∫? –í—Å–µ –¥–∞–Ω–Ω—ã–µ (–ø–ª–∞–Ω—ã, –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è, —É—á–∞—Å—Ç–Ω–∏–∫–∏) –±—É–¥—É—Ç –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ —É–¥–∞–ª–µ–Ω—ã. –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
      return;
    }

    setIsDeleting(true);
    try {
      const response = await fetch(`/api/vacations/${vacation.id}`, {
        method: 'DELETE',
        credentials: 'include'
      });

      if (response.ok) {
        const result = await response.json();
        alert(`–û—Ç–ø—É—Å–∫ "${result.deletedVacation?.title || vacation.title}" —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω`);
        router.push('/my-vacations');
      } else {
        const errorData = await response.json();
        alert(errorData.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –æ—Ç–ø—É—Å–∫–∞');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –æ—Ç–ø—É—Å–∫–∞:', error);
      alert('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –æ—Ç–ø—É—Å–∫–∞');
    } finally {
      setIsDeleting(false);
    }
  };

  const handleEditVacation = async (formData) => {
    setIsLoading(true);
    try {
      const response = await fetch(`/api/vacations/${vacation.id}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(formData),
        credentials: 'include'
      });

      if (response.ok) {
        await onUpdate();
        setShowEditModal(false);
        alert('–û—Ç–ø—É—Å–∫ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!');
      } else {
        const errorData = await response.json();
        alert(errorData.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –æ—Ç–ø—É—Å–∫–∞');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–ø—É—Å–∫–∞:', error);
      alert('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –æ—Ç–ø—É—Å–∫–∞');
    } finally {
      setIsLoading(false);
    }
  };

  const handleRemoveMember = async (memberId, memberName) => {
    if (!confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å ${memberName} –∏–∑ –æ—Ç–ø—É—Å–∫–∞?`)) {
      return;
    }

    try {
      const response = await fetch(`/api/vacations/${vacation.id}/members/${memberId}`, {
        method: 'DELETE',
        credentials: 'include'
      });

      if (response.ok) {
        const result = await response.json();
        await onUpdate();
        alert(`${result.removedUser?.name || memberName} —É–¥–∞–ª–µ–Ω –∏–∑ –æ—Ç–ø—É—Å–∫–∞`);
      } else {
        const errorData = await response.json();
        alert(errorData.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞:', error);
      alert('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏');
    }
  };

  if (!isOwner) {
    return (
      <div className="bg-white rounded-2xl shadow-lg p-6">
        <div className="text-center py-8">
          <div className="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
            <span className="text-2xl">üëë</span>
          </div>
          <h3 className="text-lg font-semibold text-gray-900 mb-2">–¢–æ–ª—å–∫–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞</h3>
          <p className="text-gray-600 max-w-md mx-auto">
            –§—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é –æ—Ç–ø—É—Å–∫–∞. 
            –ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –¥–æ–±–∞–≤–∏—Ç—å –≤–∞—Å –∫–∞–∫ —Å–æ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞.
          </p>
        </div>
      </div>
    );
  }

  const totalMembers = vacation.members?.length || 1;
  const acceptedMembers = vacation.members?.filter(m => m.status === 'ACCEPTED').length || 1;
  const pendingMembers = vacation.members?.filter(m => m.status === 'PENDING').length || 0;

  return (
    <div className="space-y-6">
      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –±—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
        <div className="bg-white rounded-xl p-4 shadow-sm border border-gray-200">
          <div className="text-2xl font-bold text-gray-900">{acceptedMembers}</div>
          <div className="text-sm text-gray-600">–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤</div>
        </div>
        <div className="bg-white rounded-xl p-4 shadow-sm border border-gray-200">
          <div className="text-2xl font-bold text-gray-900">{vacation._count?.activities || 0}</div>
          <div className="text-sm text-gray-600">–ü–ª–∞–Ω–æ–≤</div>
        </div>
        <div className="bg-white rounded-xl p-4 shadow-sm border border-gray-200">
          <div className="text-2xl font-bold text-gray-900">{vacation._count?.memories || 0}</div>
          <div className="text-sm text-gray-600">–í–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–π</div>
        </div>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        {/* –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥—Ä—É–∑–µ–π */}
        <div className="bg-white rounded-2xl shadow-lg p-6">
          <div className="flex items-center space-x-3 mb-4">
            <div className="w-12 h-12 bg-emerald-100 rounded-xl flex items-center justify-center">
              <span className="text-xl">üë•</span>
            </div>
            <div>
              <h3 className="text-lg font-semibold text-gray-900">–£—á–∞—Å—Ç–Ω–∏–∫–∏</h3>
              <p className="text-sm text-gray-600">
                {acceptedMembers} —É—á–∞—Å—Ç–Ω–∏–∫{acceptedMembers === 1 ? '' : '–∞'}
                {pendingMembers > 0 && `, ${pendingMembers} –æ–∂–∏–¥–∞–µ—Ç`}
              </p>
            </div>
          </div>
          <button
            onClick={() => setShowInviteModal(true)}
            className="w-full bg-emerald-500 text-white py-3 rounded-lg hover:bg-emerald-600 transition duration-200 font-semibold shadow-md hover:shadow-lg transform hover:-translate-y-0.5 transition-all"
          >
            –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π
          </button>
        </div>

        {/* –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—É—Å–∫–∞ */}
        <div className="bg-white rounded-2xl shadow-lg p-6">
          <div className="flex items-center space-x-3 mb-4">
            <div className="w-12 h-12 bg-blue-100 rounded-xl flex items-center justify-center">
              <span className="text-xl">‚úèÔ∏è</span>
            </div>
            <div>
              <h3 className="text-lg font-semibold text-gray-900">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</h3>
              <p className="text-sm text-gray-600">–î–∞—Ç—ã, –Ω–∞–∑–≤–∞–Ω–∏–µ, –æ–ø–∏—Å–∞–Ω–∏–µ</p>
            </div>
          </div>
          <button
            onClick={() => setShowEditModal(true)}
            className="w-full bg-blue-500 text-white py-3 rounded-lg hover:bg-blue-600 transition duration-200 font-semibold shadow-md hover:shadow-lg transform hover:-translate-y-0.5 transition-all"
          >
            –ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç–ø—É—Å–∫
          </button>
        </div>
      </div>

      {/* –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ */}
      <div className="bg-white rounded-2xl shadow-lg p-6">
        <div className="flex justify-between items-center mb-4">
          <h3 className="text-lg font-semibold text-gray-900">–í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏</h3>
          <span className="text-sm text-gray-500 bg-gray-100 px-2 py-1 rounded-full">
            {totalMembers} –≤—Å–µ–≥–æ
          </span>
        </div>
        
        {vacation.members?.length === 0 ? (
          <div className="text-center py-8">
            <div className="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <span className="text-2xl">üë§</span>
            </div>
            <p className="text-gray-600">–ü–æ–∫–∞ –Ω–µ—Ç –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</p>
            <p className="text-sm text-gray-500 mt-1">–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –æ—Ç–ø—É—Å–∫—É</p>
          </div>
        ) : (
          <div className="space-y-3">
            {/* –í–ª–∞–¥–µ–ª–µ—Ü */}
            <div className="flex items-center justify-between p-4 border border-gray-200 rounded-lg bg-blue-50">
              <div className="flex items-center space-x-3 flex-1 min-w-0">
                <div className="w-10 h-10 bg-gradient-to-r from-blue-400 to-blue-600 rounded-full flex items-center justify-center text-white font-medium flex-shrink-0">
                  {vacation.user.avatar ? (
                    <img
                      src={vacation.user.avatar}
                      alt={vacation.user.name}
                      className="w-full h-full rounded-full object-cover"
                    />
                  ) : (
                    vacation.user.name.charAt(0).toUpperCase()
                  )}
                </div>
                <div className="flex-1 min-w-0">
                  <div className="font-medium text-gray-900 truncate">
                    {vacation.user.name}
                    <span className="ml-2 text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded-full">
                      –í–ª–∞–¥–µ–ª–µ—Ü
                    </span>
                  </div>
                  <div className="text-sm text-gray-500 truncate">@{vacation.user.usertag}</div>
                </div>
              </div>
            </div>

            {/* –û—Å—Ç–∞–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ */}
            {vacation.members?.map((member) => (
              member.userId !== vacation.userId && (
                <div key={member.id} className="flex items-center justify-between p-4 border border-gray-200 rounded-lg hover:border-gray-300 transition-colors">
                  <div className="flex items-center space-x-3 flex-1 min-w-0">
                    <div className="w-10 h-10 bg-gradient-to-r from-emerald-400 to-teal-500 rounded-full flex items-center justify-center text-white font-medium flex-shrink-0">
                      {member.user.avatar ? (
                        <img
                          src={member.user.avatar}
                          alt={member.user.name}
                          className="w-full h-full rounded-full object-cover"
                        />
                      ) : (
                        member.user.name.charAt(0).toUpperCase()
                      )}
                    </div>
                    <div className="flex-1 min-w-0">
                      <div className="font-medium text-gray-900 truncate">
                        {member.user.name}
                        {member.role === 'CO_ORGANIZER' && (
                          <span className="ml-2 text-xs bg-purple-100 text-purple-800 px-2 py-1 rounded-full">
                            –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä
                          </span>
                        )}
                      </div>
                      <div className="text-sm text-gray-500 truncate">@{member.user.usertag}</div>
                    </div>
                  </div>
                  
                  <div className="flex items-center space-x-3">
                    <div className={`text-sm px-3 py-1 rounded-full ${
                      member.status === 'ACCEPTED' 
                        ? 'bg-green-100 text-green-800'
                        : 'bg-yellow-100 text-yellow-800'
                    }`}>
                      {member.status === 'ACCEPTED' ? '–£—á–∞—Å—Ç–Ω–∏–∫' : '–û–∂–∏–¥–∞–µ—Ç'}
                    </div>
                    
                    <button
                      onClick={() => handleRemoveMember(member.id, member.user.name)}
                      className="text-red-500 hover:text-red-700 p-1 rounded transition-colors"
                      title="–£–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞"
                    >
                      <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                      </svg>
                    </button>
                  </div>
                </div>
              )
            ))}
          </div>
        )}
      </div>

      {/* –û–ø–∞—Å–Ω–∞—è –∑–æ–Ω–∞ */}
      <div className="bg-white rounded-2xl shadow-lg p-6 border border-red-200">
        <div className="flex items-center space-x-3 mb-4">
          <div className="w-12 h-12 bg-red-100 rounded-xl flex items-center justify-center">
            <span className="text-xl">‚ö†Ô∏è</span>
          </div>
          <div className="flex-1">
            <h3 className="text-lg font-semibold text-red-700">–û–ø–∞—Å–Ω–∞—è –∑–æ–Ω–∞</h3>
            <p className="text-sm text-gray-600">
              –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–ø—É—Å–∫–∞ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å. –í—Å–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ —É–¥–∞–ª–µ–Ω—ã.
            </p>
          </div>
        </div>
        <div className="bg-red-50 border border-red-200 rounded-lg p-4 mb-4">
          <p className="text-sm text-red-700">
            <strong>–ë—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ:</strong> –≤—Å–µ –ø–ª–∞–Ω—ã, –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è, —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, —É—á–∞—Å—Ç–Ω–∏–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–ø—É—Å–∫–∞.
          </p>
        </div>
        <button
          onClick={handleDeleteVacation}
          disabled={isDeleting}
          className="bg-red-500 text-white px-6 py-3 rounded-lg hover:bg-red-600 transition duration-200 disabled:opacity-50 disabled:cursor-not-allowed font-semibold w-full flex items-center justify-center space-x-2"
        >
          {isDeleting ? (
            <>
              <div className="w-4 h-4 border-t-2 border-white rounded-full animate-spin"></div>
              <span>–£–¥–∞–ª–µ–Ω–∏–µ...</span>
            </>
          ) : (
            <>
              <span>üóëÔ∏è</span>
              <span>–£–¥–∞–ª–∏—Ç—å –æ—Ç–ø—É—Å–∫</span>
            </>
          )}
        </button>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ */}
      {showInviteModal && (
        <InviteFriendsModal
          vacation={vacation}
          onClose={() => setShowInviteModal(false)}
          onInvite={onUpdate}
        />
      )}

      {showEditModal && (
        <EditVacationModal
          vacation={vacation}
          onSubmit={handleEditVacation}
          onCancel={() => setShowEditModal(false)}
          isLoading={isLoading}
        />
      )}
    </div>
  );
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–ø—É—Å–∫–∞
function EditVacationModal({ vacation, onSubmit, onCancel, isLoading }) {
  const [formData, setFormData] = useState({
    title: vacation.title,
    description: vacation.description || '',
    destination: vacation.destination || '',
    startDate: vacation.startDate.split('T')[0],
    endDate: vacation.endDate.split('T')[0],
    coverImage: vacation.coverImage || '',
    isPublic: vacation.isPublic || false
  });

  const handleSubmit = (e) => {
    e.preventDefault();
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!formData.title.trim()) {
      alert('–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–ø—É—Å–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ');
      return;
    }
    
    if (!formData.startDate || !formData.endDate) {
      alert('–î–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã');
      return;
    }
    
    if (new Date(formData.startDate) > new Date(formData.endDate)) {
      alert('–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–∑–∂–µ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è');
      return;
    }
    
    onSubmit(formData);
  };

  const handleChange = (e) => {
    const { name, value, type, checked } = e.target;
    setFormData(prev => ({ 
      ...prev, 
      [name]: type === 'checkbox' ? checked : value 
    }));
  };

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
      <div className="bg-white rounded-2xl p-6 w-full max-w-md max-h-[90vh] overflow-y-auto">
        <div className="flex justify-between items-center mb-6">
          <h2 className="text-xl font-bold text-gray-900">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–ø—É—Å–∫</h2>
          <button
            onClick={onCancel}
            className="text-gray-500 hover:text-gray-700 text-2xl"
            disabled={isLoading}
          >
            √ó
          </button>
        </div>

        <form onSubmit={handleSubmit} className="space-y-4">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–ø—É—Å–∫–∞ *
            </label>
            <input
              type="text"
              name="title"
              value={formData.title}
              onChange={handleChange}
              required
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –æ—Ç–ø—É—Å–∫–∞"
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ú–µ—Å—Ç–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
            </label>
            <input
              type="text"
              name="destination"
              value={formData.destination}
              onChange={handleChange}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              placeholder="–ö—É–¥–∞ –µ–¥–µ—Ç–µ?"
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –û–ø–∏—Å–∞–Ω–∏–µ
            </label>
            <textarea
              name="description"
              value={formData.description}
              onChange={handleChange}
              rows={3}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç–ø—É—Å–∫–∞..."
            />
          </div>

          <div className="grid grid-cols-2 gap-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ù–∞—á–∞–ª–æ *
              </label>
              <input
                type="date"
                name="startDate"
                value={formData.startDate}
                onChange={handleChange}
                required
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ö–æ–Ω–µ—Ü *
              </label>
              <input
                type="date"
                name="endDate"
                value={formData.endDate}
                onChange={handleChange}
                required
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              />
            </div>
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              URL –æ–±–ª–æ–∂–∫–∏
            </label>
            <input
              type="url"
              name="coverImage"
              value={formData.coverImage}
              onChange={handleChange}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              placeholder="https://example.com/image.jpg"
            />
          </div>

          <div className="flex items-center">
            <input
              type="checkbox"
              name="isPublic"
              checked={formData.isPublic}
              onChange={handleChange}
              className="w-4 h-4 text-emerald-600 border-gray-300 rounded focus:ring-emerald-500"
            />
            <label className="ml-2 text-sm text-gray-700">
              –°–¥–µ–ª–∞—Ç—å –æ—Ç–ø—É—Å–∫ –ø—É–±–ª–∏—á–Ω—ã–º
            </label>
          </div>

          <div className="flex space-x-3 pt-4">
            <button
              type="button"
              onClick={onCancel}
              disabled={isLoading}
              className="flex-1 px-6 py-3 text-gray-700 bg-gray-200 rounded-lg hover:bg-gray-300 transition duration-200 disabled:opacity-50"
            >
              –û—Ç–º–µ–Ω–∞
            </button>
            <button
              type="submit"
              disabled={isLoading}
              className="flex-1 px-6 py-3 bg-emerald-500 text-white rounded-lg hover:bg-emerald-600 transition duration-200 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2"
            >
              {isLoading ? (
                <>
                  <div className="w-4 h-4 border-t-2 border-white rounded-full animate-spin"></div>
                  <span>–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...</span>
                </>
              ) : (
                <span>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</span>
              )}
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}
