–û–¢–ß–ï–¢ –û –§–ê–ô–õ–ê–•
–ü–∞–ø–∫–∞: /OTPUSK/otpusk-app/Holidays/src/components/vacation
–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: 10/25/2025, 7:51:28 PM
–í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: 16
–ò—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ –ø–∞–ø–∫–∏: admin, app, api, node_modules, dist, build, .git, .next, cache, temp
–ò—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã: global.css, favicon.ico
================================================================================


================================================================================
–§–ê–ô–õ: ActivityCard.js
–ü–û–õ–ù–´–ô –ü–£–¢–¨: src/components/vacation/ActivityCard.js
–†–ê–ó–ú–ï–†: 7489 —Å–∏–º–≤–æ–ª–æ–≤
================================================================================

// src/components/vacation/ActivityCard.js
'use client';

import Link from 'next/link';
import { useState } from 'react';

export default function ActivityCard({ activity, vacationId }) {
  const [participationStatus, setParticipationStatus] = useState(
    activity.participants?.[0]?.status || 'NOT_GOING'
  );

  const getTypeEmoji = (type) => {
    const emojis = {
      FLIGHT: '‚úàÔ∏è',
      HOTEL: 'üè®',
      RESTAURANT: 'üçΩÔ∏è',
      ATTRACTION: 'üèõÔ∏è',
      TRANSPORTATION: 'üöó',
      EVENT: 'üé≠',
      ACTIVITY: 'üéØ',
      SHOPPING: 'üõçÔ∏è',
      BEACH: 'üèñÔ∏è',
      HIKING: 'ü•æ',
      MUSEUM: 'üñºÔ∏è',
      CONCERT: 'üéµ',
      SPORTS: '‚öΩ'
    };
    return emojis[type] || 'üìÖ';
  };

  const getStatusColor = (status) => {
    const colors = {
      PLANNED: 'bg-blue-100 text-blue-800',
      CONFIRMED: 'bg-green-100 text-green-800',
      IN_PROGRESS: 'bg-yellow-100 text-yellow-800',
      COMPLETED: 'bg-gray-100 text-gray-800',
      CANCELLED: 'bg-red-100 text-red-800'
    };
    return colors[status] || 'bg-gray-100 text-gray-800';
  };

  const getPriorityColor = (priority) => {
    const colors = {
      LOW: 'bg-red-100 text-red-800',
      MEDIUM: 'bg-yellow-100 text-yellow-800',
      HIGH: 'bg-green-100 text-green-800'
    };
    return colors[priority] || 'bg-gray-100 text-gray-800';
  };

  const handleParticipation = async (status) => {
    try {
      const response = await fetch(`/api/activities/${activity.id}/participate`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ status }),
        credentials: 'include'
      });

      if (response.ok) {
        setParticipationStatus(status);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —É—á–∞—Å—Ç–∏—è:', error);
    }
  };

  const formatTime = (timeString) => {
    if (!timeString) return '';
    return timeString.substring(0, 5);
  };

  return (
    <Link 
      href={`/vacations/${vacationId}/activities/${activity.id}`}
      className="block bg-white rounded-xl shadow-sm border border-gray-200 p-4 hover:shadow-md hover:border-emerald-200 transition-all duration-200 group"
    >
      <div className="flex items-start justify-between mb-3">
        <div className="flex items-center space-x-3 flex-1 min-w-0">
          <div className="text-2xl flex-shrink-0">
            {getTypeEmoji(activity.type)}
          </div>
          <div className="flex-1 min-w-0">
            <h3 className="font-semibold text-gray-900 truncate group-hover:text-emerald-600 transition-colors">
              {activity.title}
            </h3>
            <div className="flex items-center space-x-2 mt-1">
              <span className="text-sm text-gray-600">
                {new Date(activity.date).toLocaleDateString('ru-RU')}
              </span>
              {activity.startTime && (
                <>
                  <span className="text-gray-400">‚Ä¢</span>
                  <span className="text-sm text-gray-600">
                    {formatTime(activity.startTime)}
                    {activity.endTime && ` - ${formatTime(activity.endTime)}`}
                  </span>
                </>
              )}
            </div>
          </div>
        </div>

        <div className="flex flex-col items-end space-y-2 flex-shrink-0 ml-3">
          <span className={`text-xs px-2 py-1 rounded-full ${getStatusColor(activity.status)}`}>
            {activity.status === 'PLANNED' && '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ'}
            {activity.status === 'CONFIRMED' && '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ'}
            {activity.status === 'IN_PROGRESS' && '–í –ø—Ä–æ—Ü–µ—Å—Å–µ'}
            {activity.status === 'COMPLETED' && '–ó–∞–≤–µ—Ä—à–µ–Ω–æ'}
            {activity.status === 'CANCELLED' && '–û—Ç–º–µ–Ω–µ–Ω–æ'}
          </span>
          
          <span className={`text-xs px-2 py-1 rounded-full ${getPriorityColor(activity.priority)}`}>
            {activity.priority === 'LOW' && '–ù–∏–∑–∫–∏–π'}
            {activity.priority === 'MEDIUM' && '–°—Ä–µ–¥–Ω–∏–π'}
            {activity.priority === 'HIGH' && '–í—ã—Å–æ–∫–∏–π'}
          </span>
        </div>
      </div>

      {activity.description && (
        <p className="text-gray-600 text-sm mb-3 line-clamp-2">
          {activity.description}
        </p>
      )}

      {/* –£—á–∞—Å—Ç–Ω–∏–∫–∏ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å */}
      <div className="flex items-center justify-between text-sm text-gray-500">
        <div className="flex items-center space-x-4">
          <div className="flex items-center space-x-1">
            <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z" />
            </svg>
            <span>{activity.participants?.length || 0}</span>
          </div>

          {activity.cost && (
            <div className="flex items-center space-x-1">
              <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1" />
              </svg>
              <span>{parseFloat(activity.cost).toFixed(2)}</span>
            </div>
          )}

          {activity.memories && activity.memories.length > 0 && (
            <div className="flex items-center space-x-1">
              <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
              </svg>
              <span>{activity.memories.length}</span>
            </div>
          )}
        </div>

        {/* –ë—ã—Å—Ç—Ä–æ–µ —É—á–∞—Å—Ç–∏–µ */}
        <div className="flex items-center space-x-1">
          <button
            onClick={(e) => {
              e.preventDefault();
              e.stopPropagation();
              handleParticipation('GOING');
            }}
            className={`p-1 rounded ${
              participationStatus === 'GOING' 
                ? 'bg-green-100 text-green-600' 
                : 'text-gray-400 hover:text-green-600'
            }`}
            title="–£—á–∞—Å—Ç–≤—É—é"
          >
            ‚úÖ
          </button>
          <button
            onClick={(e) => {
              e.preventDefault();
              e.stopPropagation();
              handleParticipation('MAYBE');
            }}
            className={`p-1 rounded ${
              participationStatus === 'MAYBE' 
                ? 'bg-yellow-100 text-yellow-600' 
                : 'text-gray-400 hover:text-yellow-600'
            }`}
            title="–í–æ–∑–º–æ–∂–Ω–æ"
          >
            ‚ùì
          </button>
          <button
            onClick={(e) => {
              e.preventDefault();
              e.stopPropagation();
              handleParticipation('NOT_GOING');
            }}
            className={`p-1 rounded ${
              participationStatus === 'NOT_GOING' 
                ? 'bg-red-100 text-red-600' 
                : 'text-gray-400 hover:text-red-600'
            }`}
            title="–ù–µ —É—á–∞—Å—Ç–≤—É—é"
          >
            ‚ùå
          </button>
        </div>
      </div>
    </Link>
  );
}



================================================================================
–§–ê–ô–õ: ActivityDetails.js
–ü–û–õ–ù–´–ô –ü–£–¢–¨: src/components/vacation/ActivityDetails.js
–†–ê–ó–ú–ï–†: 2795 —Å–∏–º–≤–æ–ª–æ–≤
================================================================================

// src/components/vacation/ActivityDetail.js
'use client';

import { useEffect, useState } from 'react';
import PhotoUpload from './PhotoUpload';
import MemoryGrid from './MemoryGrid';

export default function ActivityDetail({ vacationId, activityId }) {
  const [activity, setActivity] = useState(null);
  const [captureMemories, setCaptureMemories] = useState([]);
  const [regularMemories, setRegularMemories] = useState([]);
  const [tab, setTab] = useState('capture');
  const [showUpload, setShowUpload] = useState(false);

  useEffect(() => {
    Promise.all([
      fetch(`/api/vacations/${vacationId}/activities/${activityId}`, { credentials: 'include' }).then(r => r.json()),
      fetch(`/api/memories?activityId=${activityId}&captureType=ACTIVITY_MOMENT`, { credentials: 'include' }).then(r => r.json()),
      fetch(`/api/memories?activityId=${activityId}&captureType=null`, { credentials: 'include' }).then(r => r.json()),
    ]).then(([act, cap, reg]) => {
      setActivity(act);
      setCaptureMemories(cap);
      setRegularMemories(reg);
    });
  }, [vacationId, activityId]);

  if (!activity) return <div className="p-6">–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶</div>;

  return (
    <div className="bg-white rounded-2xl shadow-lg p-6">
      <h1 className="text-2xl font-bold mb-2">{activity.title}</h1>
      <p className="text-gray-600 mb-4">
        {new Date(activity.date).toLocaleDateString('ru-RU')} ‚Ä¢ {activity.location?.name}
      </p>

      <div className="flex space-x-4 mb-4">
        <button
          onClick={() => setTab('capture')}
          className={`px-4 py-2 rounded ${tab === 'capture' ? 'bg-emerald-500 text-white' : 'bg-gray-200'}`}
        >
          –ó–∞–ø–µ—á–∞—Ç–ª—ë–Ω–Ω—ã–µ ({captureMemories.length})
        </button>
        <button
          onClick={() => setTab('regular')}
          className={`px-4 py-2 rounded ${tab === 'regular' ? 'bg-emerald-500 text-white' : 'bg-gray-200'}`}
        >
          –û–±—ã—á–Ω—ã–µ —Ñ–æ—Ç–æ ({regularMemories.length})
        </button>
      </div>

      {tab === 'capture' && <MemoryGrid memories={captureMemories} showBadge />}
      {tab === 'regular' && <MemoryGrid memories={regularMemories} />}

      <button
        onClick={() => setShowUpload(true)}
        className="mt-6 w-full bg-emerald-500 text-white py-2 rounded-lg hover:bg-emerald-600"
      >
        + –î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ
      </button>

      {showUpload && (
        <div className="mt-6">
          <PhotoUpload
            vacationId={vacationId}
            captureType={tab === 'capture' ? 'ACTIVITY_MOMENT' : null}
            activityId={activityId}
            onUpload={() => {
              setShowUpload(false);
              window.location.reload();
            }}
            onCancel={() => setShowUpload(false)}
          />
        </div>
      )}
    </div>
  );
}



================================================================================
–§–ê–ô–õ: CreateActivityModal.js
–ü–û–õ–ù–´–ô –ü–£–¢–¨: src/components/vacation/CreateActivityModal.js
–†–ê–ó–ú–ï–†: 10519 —Å–∏–º–≤–æ–ª–æ–≤
================================================================================

// src/components/vacation/CreateActivityModal.js
'use client';

import { useState } from 'react';

export default function CreateActivityModal({ vacation, onClose, onCreate }) {
  const [formData, setFormData] = useState({
    title: '',
    description: '',
    date: '',
    type: 'ACTIVITY',
    startTime: '',
    endTime: '',
    cost: '',
    notes: '',
    priority: 'MEDIUM',
    status: 'PLANNED'
  });
  const [isLoading, setIsLoading] = useState(false);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    if (!formData.title.trim() || !formData.date) {
      alert('–ù–∞–∑–≤–∞–Ω–∏–µ –∏ –¥–∞—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã');
      return;
    }

    setIsLoading(true);
    try {
      const response = await fetch('/api/activities', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          ...formData,
          vacationId: vacation.id
        }),
        credentials: 'include'
      });

      if (response.ok) {
        const newActivity = await response.json();
        onCreate(newActivity);
        onClose();
      } else {
        const error = await response.json();
        alert(error.message || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:', error);
      alert('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏');
    } finally {
      setIsLoading(false);
    }
  };

  const activityTypes = [
    { value: 'FLIGHT', label: '‚úàÔ∏è –ü–µ—Ä–µ–ª–µ—Ç', emoji: '‚úàÔ∏è' },
    { value: 'HOTEL', label: 'üè® –û—Ç–µ–ª—å', emoji: 'üè®' },
    { value: 'RESTAURANT', label: 'üçΩÔ∏è –†–µ—Å—Ç–æ—Ä–∞–Ω', emoji: 'üçΩÔ∏è' },
    { value: 'ATTRACTION', label: 'üèõÔ∏è –î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å', emoji: 'üèõÔ∏è' },
    { value: 'TRANSPORTATION', label: 'üöó –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç', emoji: 'üöó' },
    { value: 'EVENT', label: 'üé≠ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ', emoji: 'üé≠' },
    { value: 'ACTIVITY', label: 'üéØ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', emoji: 'üéØ' },
    { value: 'SHOPPING', label: 'üõçÔ∏è –®–æ–ø–ø–∏–Ω–≥', emoji: 'üõçÔ∏è' },
    { value: 'BEACH', label: 'üèñÔ∏è –ü–ª—è–∂', emoji: 'üèñÔ∏è' },
    { value: 'HIKING', label: 'ü•æ –ü–æ—Ö–æ–¥', emoji: 'ü•æ' },
    { value: 'MUSEUM', label: 'üñºÔ∏è –ú—É–∑–µ–π', emoji: 'üñºÔ∏è' },
    { value: 'CONCERT', label: 'üéµ –ö–æ–Ω—Ü–µ—Ä—Ç', emoji: 'üéµ' },
    { value: 'SPORTS', label: '‚öΩ –°–ø–æ—Ä—Ç', emoji: '‚öΩ' }
  ];

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
      <div className="bg-white rounded-2xl p-6 w-full max-w-2xl max-h-[90vh] overflow-y-auto">
        <div className="flex justify-between items-center mb-6">
          <h2 className="text-2xl font-bold text-gray-900">–°–æ–∑–¥–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h2>
          <button
            onClick={onClose}
            className="text-gray-500 hover:text-gray-700 text-2xl"
            disabled={isLoading}
          >
            √ó
          </button>
        </div>

        <form onSubmit={handleSubmit} className="space-y-6">
          {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ù–∞–∑–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ *
              </label>
              <input
                type="text"
                name="title"
                value={formData.title}
                onChange={handleChange}
                required
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –≠–∫—Å–∫—É—Ä—Å–∏—è –ø–æ —Å—Ç–∞—Ä–æ–º—É –≥–æ—Ä–æ–¥—É"
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –¢–∏–ø –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ *
              </label>
              <select
                name="type"
                value={formData.type}
                onChange={handleChange}
                required
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              >
                {activityTypes.map(type => (
                  <option key={type.value} value={type.value}>
                    {type.emoji} {type.label}
                  </option>
                ))}
              </select>
            </div>
          </div>

          {/* –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –î–∞—Ç–∞ *
              </label>
              <input
                type="date"
                name="date"
                value={formData.date}
                onChange={handleChange}
                required
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞
              </label>
              <input
                type="time"
                name="startTime"
                value={formData.startTime}
                onChange={handleChange}
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è
              </label>
              <input
                type="time"
                name="endTime"
                value={formData.endTime}
                onChange={handleChange}
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              />
            </div>
          </div>

          {/* –û–ø–∏—Å–∞–Ω–∏–µ –∏ –∑–∞–º–µ—Ç–∫–∏ */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –û–ø–∏—Å–∞–Ω–∏–µ
            </label>
            <textarea
              name="description"
              value={formData.description}
              onChange={handleChange}
              rows={3}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏..."
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ó–∞–º–µ—Ç–∫–∏
            </label>
            <textarea
              name="notes"
              value={formData.notes}
              onChange={handleChange}
              rows={2}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏..."
            />
          </div>

          {/* –°—Ç–æ–∏–º–æ—Å—Ç—å –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –°—Ç–æ–∏–º–æ—Å—Ç—å
              </label>
              <input
                type="number"
                name="cost"
                value={formData.cost}
                onChange={handleChange}
                min="0"
                step="0.01"
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
                placeholder="0.00"
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç
              </label>
              <select
                name="priority"
                value={formData.priority}
                onChange={handleChange}
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              >
                <option value="LOW">üî¥ –ù–∏–∑–∫–∏–π</option>
                <option value="MEDIUM">üü° –°—Ä–µ–¥–Ω–∏–π</option>
                <option value="HIGH">üü¢ –í—ã—Å–æ–∫–∏–π</option>
              </select>
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –°—Ç–∞—Ç—É—Å
              </label>
              <select
                name="status"
                value={formData.status}
                onChange={handleChange}
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              >
                <option value="PLANNED">üìÖ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ</option>
                <option value="CONFIRMED">‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ</option>
                <option value="IN_PROGRESS">üîÑ –í –ø—Ä–æ—Ü–µ—Å—Å–µ</option>
                <option value="COMPLETED">üèÅ –ó–∞–≤–µ—Ä—à–µ–Ω–æ</option>
                <option value="CANCELLED">‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ</option>
              </select>
            </div>
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
          <div className="flex space-x-3 pt-4">
            <button
              type="button"
              onClick={onClose}
              disabled={isLoading}
              className="flex-1 px-6 py-3 text-gray-700 bg-gray-200 rounded-lg hover:bg-gray-300 transition duration-200 disabled:opacity-50"
            >
              –û—Ç–º–µ–Ω–∞
            </button>
            <button
              type="submit"
              disabled={isLoading}
              className="flex-1 px-6 py-3 bg-emerald-500 text-white rounded-lg hover:bg-emerald-600 transition duration-200 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2"
            >
              {isLoading ? (
                <>
                  <div className="w-4 h-4 border-t-2 border-white rounded-full animate-spin"></div>
                  <span>–°–æ–∑–¥–∞–Ω–∏–µ...</span>
                </>
              ) : (
                <span>–°–æ–∑–¥–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</span>
              )}
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}



================================================================================
–§–ê–ô–õ: DebugImages.js
–ü–û–õ–ù–´–ô –ü–£–¢–¨: src/components/vacation/DebugImages.js
–†–ê–ó–ú–ï–†: 4835 —Å–∏–º–≤–æ–ª–æ–≤
================================================================================

// src/components/vacation/DebugImages.js
'use client';

import { useState } from 'react';

export default function DebugImages({ memories }) {
  const [testResults, setTestResults] = useState([]);

  const testImageUrls = async () => {
    console.log('üß™ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...');
    
    const results = await Promise.all(
      memories.map(async (memory) => {
        const getImageUrl = (imageUrl) => {
          if (!imageUrl) return null;
          if (imageUrl.startsWith('http')) return imageUrl;
          if (!imageUrl.startsWith('/uploads/') && !imageUrl.startsWith('/')) {
            return `/uploads/memories/${imageUrl}`;
          }
          return imageUrl;
        };

        const imageUrl = getImageUrl(memory.imageUrl);
        const fullUrl = imageUrl?.startsWith('http') ? imageUrl : `${window.location.origin}${imageUrl}`;
        
        try {
          const response = await fetch(fullUrl, { method: 'HEAD' });
          return {
            memoryId: memory.id,
            originalUrl: memory.imageUrl,
            resolvedUrl: imageUrl,
            fullUrl: fullUrl,
            exists: response.ok,
            status: response.status,
            size: response.headers.get('content-length')
          };
        } catch (error) {
          return {
            memoryId: memory.id,
            originalUrl: memory.imageUrl,
            resolvedUrl: imageUrl,
            fullUrl: fullUrl,
            exists: false,
            error: error.message
          };
        }
      })
    );

    setTestResults(results);
    
    // –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    results.forEach(result => {
      if (result.exists) {
        console.log('‚úÖ', result);
      } else {
        console.log('‚ùå', result);
      }
    });
  };

  return (
    <div className="mb-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
      <div className="flex items-center justify-between mb-4">
        <h3 className="text-lg font-semibold text-yellow-800">üêõ –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</h3>
        <button
          onClick={testImageUrls}
          className="bg-yellow-500 text-white px-4 py-2 rounded hover:bg-yellow-600 text-sm"
        >
          –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å URL
        </button>
      </div>

      <div className="space-y-2 max-h-64 overflow-y-auto">
        {memories.map((memory) => {
          const getImageUrl = (imageUrl) => {
            if (!imageUrl) return '/placeholder-image.jpg';
            if (imageUrl.startsWith('http')) return imageUrl;
            if (!imageUrl.startsWith('/uploads/') && !imageUrl.startsWith('/')) {
              return `/uploads/memories/${imageUrl}`;
            }
            return imageUrl;
          };

          const imageUrl = getImageUrl(memory.imageUrl);
          const testResult = testResults.find(r => r.memoryId === memory.id);

          return (
            <div key={memory.id} className="flex items-center space-x-3 p-3 bg-white rounded border">
              <img
                src={imageUrl}
                alt={memory.title}
                className="w-12 h-12 object-cover rounded"
                onError={(e) => {
                  e.target.src = '/placeholder-image.jpg';
                  e.target.classList.add('border-2', 'border-red-500');
                }}
                onLoad={(e) => {
                  e.target.classList.add('border-2', 'border-green-500');
                }}
              />
              
              <div className="flex-1 min-w-0">
                <div className="font-medium text-sm truncate">{memory.title}</div>
                <div className="text-xs text-gray-600 truncate">ID: {memory.id}</div>
                <div className="text-xs text-gray-500 truncate" title={memory.imageUrl}>
                  {memory.imageUrl}
                </div>
              </div>

              <div className="text-right">
                {testResult ? (
                  testResult.exists ? (
                    <span className="text-green-600 text-sm">‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ</span>
                  ) : (
                    <span className="text-red-600 text-sm">‚ùå –û—à–∏–±–∫–∞</span>
                  )
                ) : (
                  <span className="text-gray-500 text-sm">‚è≥ –ù–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ</span>
                )}
              </div>
            </div>
          );
        })}
      </div>

      {testResults.length > 0 && (
        <div className="mt-4 p-3 bg-blue-50 rounded">
          <h4 className="font-semibold text-blue-800 mb-2">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</h4>
          <div className="text-sm">
            ‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ: {testResults.filter(r => r.exists).length} / {testResults.length}
          </div>
          <div className="text-sm">
            ‚ùå –û—à–∏–±–∫–∏: {testResults.filter(r => !r.exists).length} / {testResults.length}
          </div>
        </div>
      )}
    </div>
  );
}



================================================================================
–§–ê–ô–õ: InviteFriendsModal.js
–ü–û–õ–ù–´–ô –ü–£–¢–¨: src/components/vacation/InviteFriendsModal.js
–†–ê–ó–ú–ï–†: 9532 —Å–∏–º–≤–æ–ª–æ–≤
================================================================================

// src/components/vacation/InviteFriendsModal.js (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
'use client';

import { useState, useEffect } from 'react';

export default function InviteFriendsModal({ vacation, onClose, onInvite }) {
  const [friends, setFriends] = useState([]);
  const [selectedFriends, setSelectedFriends] = useState([]);
  const [searchTerm, setSearchTerm] = useState('');
  const [isLoading, setIsLoading] = useState(true);
  const [usertag, setUsertag] = useState('');
  const [isInviting, setIsInviting] = useState(false);

  useEffect(() => {
    fetchFriends();
  }, []);

  const fetchFriends = async () => {
    try {
      const response = await fetch('/api/friends/list', {
        credentials: 'include'
      });
      
      if (response.ok) {
        const data = await response.json();
        setFriends(data.friends);
      } else {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥—Ä—É–∑–µ–π:', response.status);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥—Ä—É–∑–µ–π:', error);
    } finally {
      setIsLoading(false);
    }
  };

  const toggleFriendSelection = (friendId) => {
    setSelectedFriends(prev => 
      prev.includes(friendId) 
        ? prev.filter(id => id !== friendId)
        : [...prev, friendId]
    );
  };

  const handleInviteSelected = async () => {
    if (selectedFriends.length === 0) return;

    setIsInviting(true);
    try {
      const results = [];
      for (const friendId of selectedFriends) {
        try {
          const response = await fetch(`/api/vacations/${vacation.id}/invite-friend`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ friendId }),
            credentials: 'include'
          });
          
          const data = await response.json();
          results.push({ 
            friendId, 
            success: response.ok,
            message: data.message 
          });
        } catch (error) {
          results.push({ 
            friendId, 
            success: false,
            message: '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏' 
          });
        }
      }

      onInvite(results);
      setSelectedFriends([]);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π:', error);
    } finally {
      setIsInviting(false);
    }
  };

  const handleInviteByUsertag = async () => {
    if (!usertag.trim()) return;

    setIsInviting(true);
    try {
      const response = await fetch(`/api/vacations/${vacation.id}/invite-by-usertag`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ usertag: usertag.trim() }),
        credentials: 'include'
      });

      const data = await response.json();
      
      if (response.ok) {
        alert('‚úÖ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
        setUsertag('');
        onInvite([{ success: true, message: '–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ' }]);
      } else {
        alert(`‚ùå ${data.message || '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è'}`);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:', error);
      alert('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏');
    } finally {
      setIsInviting(false);
    }
  };

  const filteredFriends = friends.filter(friend =>
    friend.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
    friend.usertag.toLowerCase().includes(searchTerm.toLowerCase())
  );

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
      <div className="bg-white rounded-2xl p-6 w-full max-w-2xl max-h-[80vh] overflow-y-auto">
        <div className="flex justify-between items-center mb-6">
          <h2 className="text-2xl font-bold text-gray-900">–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π</h2>
          <button
            onClick={onClose}
            className="text-gray-500 hover:text-gray-700 text-2xl"
          >
            √ó
          </button>
        </div>

        {/* –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø–æ usertag */}
        <div className="mb-6 p-4 bg-blue-50 rounded-lg">
          <h3 className="text-lg font-semibold mb-3">–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –ø–æ usertag</h3>
          <div className="flex gap-2">
            <input
              type="text"
              value={usertag}
              onChange={(e) => setUsertag(e.target.value)}
              placeholder="–í–≤–µ–¥–∏—Ç–µ usertag –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
              className="flex-1 px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500"
              disabled={isInviting}
            />
            <button
              onClick={handleInviteByUsertag}
              disabled={!usertag.trim() || isInviting}
              className="bg-emerald-500 text-white px-4 py-2 rounded-lg hover:bg-emerald-600 disabled:opacity-50 disabled:cursor-not-allowed whitespace-nowrap"
            >
              {isInviting ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å'}
            </button>
          </div>
          <p className="text-sm text-gray-600 mt-2">
            –í–≤–µ–¥–∏—Ç–µ usertag –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: ivan_petrov)
          </p>
        </div>

        {/* –°–ø–∏—Å–æ–∫ –¥—Ä—É–∑–µ–π */}
        <div className="mb-4">
          <h3 className="text-lg font-semibold mb-3">–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –¥—Ä—É–∑–µ–π</h3>
          
          <input
            type="text"
            placeholder="–ü–æ–∏—Å–∫ –¥—Ä—É–∑–µ–π..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            className="w-full px-4 py-2 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-emerald-500"
          />

          {isLoading ? (
            <div className="text-center py-8">
              <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-emerald-500 mx-auto"></div>
              <p className="text-gray-600 mt-2">–ó–∞–≥—Ä—É–∑–∫–∞ –¥—Ä—É–∑–µ–π...</p>
            </div>
          ) : (
            <div className="space-y-2 max-h-64 overflow-y-auto">
              {filteredFriends.map(friend => (
                <div
                  key={friend.id}
                  className={`flex items-center justify-between p-3 border rounded-lg cursor-pointer transition-colors ${
                    selectedFriends.includes(friend.id)
                      ? 'border-emerald-500 bg-emerald-50'
                      : 'border-gray-200 hover:border-emerald-300'
                  }`}
                  onClick={() => toggleFriendSelection(friend.id)}
                >
                  <div className="flex items-center space-x-3">
                    <div className="w-10 h-10 bg-gradient-to-r from-emerald-400 to-teal-500 rounded-full flex items-center justify-center text-white font-medium">
                      {friend.avatar ? (
                        <img
                          src={friend.avatar}
                          alt={friend.name}
                          className="w-full h-full rounded-full object-cover"
                        />
                      ) : (
                        friend.name.charAt(0).toUpperCase()
                      )}
                    </div>
                    <div>
                      <div className="font-medium text-gray-900">{friend.name}</div>
                      <div className="text-sm text-gray-500">@{friend.usertag}</div>
                    </div>
                  </div>
                  
                  <div className={`w-5 h-5 border-2 rounded flex items-center justify-center ${
                    selectedFriends.includes(friend.id)
                      ? 'bg-emerald-500 border-emerald-500'
                      : 'border-gray-300'
                  }`}>
                    {selectedFriends.includes(friend.id) && (
                      <svg className="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 20 20">
                        <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                      </svg>
                    )}
                  </div>
                </div>
              ))}
              
              {filteredFriends.length === 0 && (
                <div className="text-center py-8 text-gray-500">
                  {searchTerm ? '–î—Ä—É–∑—å—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã' : '–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥—Ä—É–∑–µ–π'}
                </div>
              )}
            </div>
          )}
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
        <div className="flex justify-between items-center pt-4 border-t">
          <div className="text-sm text-gray-600">
            –í—ã–±—Ä–∞–Ω–æ: {selectedFriends.length}
          </div>
          <div className="flex space-x-3">
            <button
              onClick={onClose}
              disabled={isInviting}
              className="px-6 py-2 text-gray-700 bg-gray-200 rounded-lg hover:bg-gray-300 disabled:opacity-50"
            >
              –û—Ç–º–µ–Ω–∞
            </button>
            <button
              onClick={handleInviteSelected}
              disabled={selectedFriends.length === 0 || isInviting}
              className="px-6 py-2 bg-emerald-500 text-white rounded-lg hover:bg-emerald-600 disabled:opacity-50 disabled:cursor-not-allowed flex items-center space-x-2"
            >
              {isInviting && (
                <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white"></div>
              )}
              <span>
                {isInviting ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : `–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å (${selectedFriends.length})`}
              </span>
            </button>
          </div>
        </div>
      </div>
    </div>
  );
}



================================================================================
–§–ê–ô–õ: MemoriesSection.js
–ü–û–õ–ù–´–ô –ü–£–¢–¨: src/components/vacation/MemoriesSection.js
–†–ê–ó–ú–ï–†: 4057 —Å–∏–º–≤–æ–ª–æ–≤
================================================================================

// src/components/vacation/MemoriesSection.js
'use client';

import { useState, useEffect } from 'react';
import PhotoUpload from './PhotoUpload.js';

export default function MemoriesSection({ vacation, preview = false }) {
  const [memories, setMemories] = useState([]);
  const [isLoading, setIsLoading] = useState(true);
  const [showUpload, setShowUpload] = useState(false);

  useEffect(() => {
    fetchMemories();
  }, [vacation.id]);

  const fetchMemories = async () => {
    try {
      setIsLoading(true);
      const response = await fetch(`/api/vacations/${vacation.id}/memories`, {
        credentials: 'include'
      });
      if (response.ok) {
        const data = await response.json();
        setMemories(data);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞:', error);
    } finally {
      setIsLoading(false);
    }
  };

  const handleMemoryUpload = (newMemories) => {
    setMemories(prev => [...newMemories, ...prev]);
    setShowUpload(false);
    setTimeout(() => {
      fetchMemories();
    }, 1000);
  };

  if (isLoading) {
    return (
      <div className="bg-white rounded-2xl shadow-lg p-6">
        <div className="flex justify-between items-center mb-6">
          <h2 className="text-xl font-bold text-gray-900">–í–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è</h2>
          <div className="w-24 h-8 bg-gray-200 rounded animate-pulse"></div>
        </div>
        <div className="grid grid-cols-3 gap-4">
          {[...Array(6)].map((_, i) => (
            <div key={i} className="aspect-square bg-gray-200 rounded-lg animate-pulse"></div>
          ))}
        </div>
      </div>
    );
  }

  const displayedMemories = preview ? memories.slice(0, 6) : memories;

  return (
    <div className="bg-white rounded-2xl shadow-lg p-6">
      <div className="flex justify-between items-center mb-6">
        <h2 className="text-xl font-bold text-gray-900">
          –í–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è {!preview && `(${memories.length})`}
        </h2>
        <button 
          onClick={() => setShowUpload(true)}
          className="bg-emerald-500 text-white px-4 py-2 rounded-lg hover:bg-emerald-600 transition duration-200 text-sm font-medium flex items-center space-x-2"
        >
          <span>+</span>
          <span>–î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ</span>
        </button>
      </div>

      {memories.length === 0 ? (
        <div className="text-center py-12 border-2 border-dashed border-gray-300 rounded-xl">
          <div className="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
            <span className="text-2xl">Camera</span>
          </div>
          <h3 className="text-lg font-semibold text-gray-900 mb-2">
            –ü–æ–∫–∞ –Ω–µ—Ç –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–π
          </h3>
          <p className="text-gray-600 mb-6">
            –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤–∞—à–µ–≥–æ –æ—Ç–ø—É—Å–∫–∞
          </p>
          <button
            onClick={() => setShowUpload(true)}
            className="bg-emerald-500 text-white px-6 py-2 rounded-lg hover:bg-emerald-600 transition duration-200 font-medium"
          >
            + –î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ
          </button>
        </div>
      ) : (
        <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
          {displayedMemories.map((memory) => (
            <div
              key={memory.id}
              className="aspect-square rounded-lg overflow-hidden group cursor-pointer relative bg-gray-100"
            >
              <img
                src={memory.imageUrl}
                alt={memory.title}
                className="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
              />
              <div className="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-all duration-300" />
            </div>
          ))}
        </div>
      )}

      {showUpload && (
        <div className="mt-6">
          <PhotoUpload 
            vacationId={vacation.id}
            onUpload={handleMemoryUpload}
            onCancel={() => setShowUpload(false)}
          />
        </div>
      )}
    </div>
  );
}



================================================================================
–§–ê–ô–õ: MemoryGrid.js
–ü–û–õ–ù–´–ô –ü–£–¢–¨: src/components/vacation/MemoryGrid.js
–†–ê–ó–ú–ï–†: 3948 —Å–∏–º–≤–æ–ª–æ–≤
================================================================================

// src/components/vacation/MemoryGrid.js
'use client';

import { useState } from 'react';

export default function MemoryGrid({ memories = [], showBadge = false }) {
  const [imageErrors, setImageErrors] = useState({});

  // –ó–∞—â–∏—Ç–∞ –æ—Ç undefined –∏–ª–∏ null
  if (!memories || !Array.isArray(memories)) {
    console.warn('‚ö†Ô∏è MemoryGrid: memories –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º:', memories);
    return (
      <div className="text-center py-8 text-gray-500">
        <div className="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
          <span className="text-2xl">‚ùì</span>
        </div>
        <p>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</p>
      </div>
    );
  }

  // –§–∏–ª—å—Ç—Ä—É–µ–º –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
  const validMemories = memories.filter(memory => 
    memory && 
    typeof memory === 'object' && 
    memory.id && 
    memory.imageUrl
  );

  if (validMemories.length === 0) {
    return (
      <div className="text-center py-12">
        <div className="w-20 h-20 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
          <span className="text-2xl">üì∏</span>
        </div>
        <p className="text-gray-600">–ü–æ–∫–∞ –Ω–µ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π</p>
      </div>
    );
  }

  const getImageUrl = (imageUrl) => {
    if (!imageUrl) {
      console.warn('‚ö†Ô∏è MemoryGrid: imageUrl –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
      return '/placeholder-image.jpg';
    }
    
    if (imageUrl.startsWith('http')) return imageUrl;
    
    if (!imageUrl.startsWith('/uploads/') && !imageUrl.startsWith('/')) {
      const correctedUrl = `/uploads/memories/${imageUrl}`;
      console.log('üîÑ MemoryGrid: –∏—Å–ø—Ä–∞–≤–ª–µ–Ω URL:', { original: imageUrl, corrected: correctedUrl });
      return correctedUrl;
    }
    
    return imageUrl;
  };

  const handleImageError = (memoryId, imageUrl) => {
    console.error('‚ùå MemoryGrid: –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', { memoryId, imageUrl });
    setImageErrors(prev => ({ ...prev, [memoryId]: true }));
  };

  const handleImageLoad = (memoryId, imageUrl) => {
    console.log('‚úÖ MemoryGrid: –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ:', { memoryId, imageUrl });
    setImageErrors(prev => ({ ...prev, [memoryId]: false }));
  };

  return (
    <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
      {validMemories.map((memory) => {
        const imageUrl = getImageUrl(memory.imageUrl);
        const hasError = imageErrors[memory.id];
        
        return (
          <div
            key={memory.id}
            className="aspect-square rounded-lg overflow-hidden group cursor-pointer relative bg-gray-100 border border-gray-200"
          >
            {!hasError ? (
              <img
                src={imageUrl}
                alt={memory.title || '–§–æ—Ç–æ –∏–∑ –æ—Ç–ø—É—Å–∫–∞'}
                className="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                onError={() => handleImageError(memory.id, imageUrl)}
                onLoad={() => handleImageLoad(memory.id, imageUrl)}
                loading="lazy"
              />
            ) : (
              <div className="w-full h-full flex items-center justify-center bg-gray-200">
                <div className="text-center text-gray-500">
                  <div className="text-2xl mb-2">üì∑</div>
                  <div className="text-xs">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å</div>
                </div>
              </div>
            )}
            
            {/* –ë–µ–π–¥–∂ –¥–ª—è capture-—Ñ–æ—Ç–æ */}
            {showBadge && memory.captureType && !hasError && (
              <div className="absolute top-2 right-2 bg-yellow-500 text-white text-xs px-2 py-1 rounded-full shadow-md">
                ‚≠ê
              </div>
            )}
            
            {/* Overlay –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ */}
            {!hasError && (
              <div className="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-20 transition-all duration-300" />
            )}
          </div>
        );
      })}
    </div>
  );
}



================================================================================
–§–ê–ô–õ: MemoryUploadModal.js
–ü–û–õ–ù–´–ô –ü–£–¢–¨: src/components/vacation/MemoryUploadModal.js
–†–ê–ó–ú–ï–†: 1084 —Å–∏–º–≤–æ–ª–æ–≤
================================================================================

// src/components/vacation/MemoryUploadModal.js
'use client';

import PhotoUpload from './PhotoUpload.js';

export default function MemoryUploadModal({ vacationId, onClose, onUpload }) {
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
      <div className="bg-white rounded-2xl shadow-xl max-w-2xl w-full p-6">
        <div className="flex justify-between items-center mb-4">
          <h3 className="text-lg font-semibold">–ó–∞–≥—Ä—É–∑–∏—Ç—å –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ</h3>
          <button onClick={onClose} className="text-gray-500 hover:text-gray-700">
            <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
        </div>
        <PhotoUpload
          vacationId={vacationId}
          onUpload={(memories) => {
            onUpload(memories);
            onClose();
          }}
          onCancel={onClose}
        />
      </div>
    </div>
  );
}



================================================================================
–§–ê–ô–õ: PhotoUpload.js
–ü–û–õ–ù–´–ô –ü–£–¢–¨: src/components/vacation/PhotoUpload.js
–†–ê–ó–ú–ï–†: 8297 —Å–∏–º–≤–æ–ª–æ–≤
================================================================================

// src/components/vacation/PhotoUpload.js
'use client';

import { useState, useRef } from 'react';

export default function PhotoUpload({
  vacationId,
  captureType,
  activityId,
  onUpload,
  onCancel,
}) {
  const [isUploading, setIsUploading] = useState(false);
  const [selectedFiles, setSelectedFiles] = useState([]);
  const [previewUrls, setPreviewUrls] = useState([]);
  const fileInputRef = useRef(null);

  const handleFileSelect = (e) => {
    const files = Array.from(e.target.files);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ñ–∞–π–ª–æ–≤
    if (files.length > 10) {
      alert('–ú–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–µ –±–æ–ª–µ–µ 10 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∑–∞ —Ä–∞–∑');
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ –∏ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–æ–≤
    const validFiles = files.filter(f => {
      const isImage = f.type.startsWith('image/');
      const isSizeValid = f.size <= 10 * 1024 * 1024; // 10MB
      return isImage && isSizeValid;
    });

    if (validFiles.length !== files.length) {
      alert('–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∞–π–ª—ã –Ω–µ —è–≤–ª—è—é—Ç—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –∏–ª–∏ –ø—Ä–µ–≤—ã—à–∞—é—Ç —Ä–∞–∑–º–µ—Ä 10 –ú–ë');
    }

    setSelectedFiles(validFiles);
    
    // –°–æ–∑–¥–∞–µ–º preview URLs
    const newPreviewUrls = validFiles.map(f => URL.createObjectURL(f));
    setPreviewUrls(newPreviewUrls);
  };

  const handleUpload = async () => {
    if (!selectedFiles.length) return;

    setIsUploading(true);
    
    const formData = new FormData();
    formData.append('vacationId', vacationId);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–∏–ø–∞ –∑–∞–≥—Ä—É–∑–∫–∏
    if (captureType) {
      formData.append('captureType', captureType);
    }
    if (activityId) {
      formData.append('activityId', activityId);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã
    selectedFiles.forEach(f => formData.append('photos', f));

    try {
      const response = await fetch('/api/memories/upload', {
        method: 'POST',
        body: formData,
        credentials: 'include',
      });

      const data = await response.json();

      if (response.ok) {
        alert(`–£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ ${data.memories.length} —Ñ–æ—Ç–æ!`);
        onUpload?.(data.memories);
      } else {
        alert(data.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error);
      alert('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ');
    } finally {
      setIsUploading(false);
      clearAll();
    }
  };

  const removeFile = (index) => {
    // –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º URL preview
    URL.revokeObjectURL(previewUrls[index]);
    
    setSelectedFiles(prev => prev.filter((_, i) => i !== index));
    setPreviewUrls(prev => prev.filter((_, i) => i !== index));
  };

  const clearAll = () => {
    // –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –≤—Å–µ preview URLs
    previewUrls.forEach(url => URL.revokeObjectURL(url));
    
    setSelectedFiles([]);
    setPreviewUrls([]);
    if (fileInputRef.current) {
      fileInputRef.current.value = '';
    }
  };

  const getUploadTitle = () => {
    if (captureType === 'DAILY_MOMENT') return '–ó–∞–ø–µ—á–∞—Ç–ª–µ—Ç—å –º–æ–º–µ–Ω—Ç –¥–Ω—è';
    if (captureType === 'ACTIVITY_MOMENT') return '–ó–∞–ø–µ—á–∞—Ç–ª–µ—Ç—å –º–æ–º–µ–Ω—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏';
    if (activityId) return '–î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏';
    return '–î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –≤ –≥–∞–ª–µ—Ä–µ—é';
  };

  const getUploadDescription = () => {
    if (captureType) {
      return '–Ø—Ä–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã –∏–º–µ—é—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –∫–∞–∂–¥–æ–≥–æ –∫–∞–¥—Ä–∞';
    }
    return '–û–±—ã—á–Ω—ã–µ —Ñ–æ—Ç–æ –º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É';
  };

  return (
    <div className="bg-white rounded-2xl shadow-lg p-6 border-2 border-emerald-200">
      <div className="flex justify-between items-center mb-4">
        <div>
          <h3 className="text-lg font-semibold text-gray-900">
            {getUploadTitle()}
          </h3>
          <p className="text-sm text-gray-600 mt-1">
            {getUploadDescription()}
          </p>
        </div>
        <button
          onClick={onCancel}
          disabled={isUploading}
          className="text-gray-500 hover:text-gray-700 p-1 transition-colors"
        >
          <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>

      {/* –û–±–ª–∞—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏ */}
      <div
        className="border-2 border-dashed border-gray-300 rounded-2xl p-8 text-center hover:border-emerald-400 cursor-pointer bg-gray-50 transition-colors"
        onClick={() => fileInputRef.current?.click()}
      >
        <input
          ref={fileInputRef}
          type="file"
          multiple
          accept="image/*"
          onChange={handleFileSelect}
          className="hidden"
          disabled={isUploading}
        />
        
        <div className="text-4xl mb-4 text-gray-400">üì∏</div>
        <div className="text-lg font-semibold text-gray-700 mb-2">
          –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
        </div>
        <div className="text-sm text-gray-500 mb-1">
          –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª—ã –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞
        </div>
        <div className="text-xs text-gray-400">
          –ú–∞–∫—Å–∏–º—É–º 10 —Ñ–∞–π–ª–æ–≤, –¥–æ 10 –ú–ë –∫–∞–∂–¥—ã–π
        </div>
      </div>

      {/* Preview –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ */}
      {previewUrls.length > 0 && (
        <div className="mt-6 space-y-4">
          <div className="flex justify-between items-center">
            <h4 className="font-semibold text-gray-700">
              –í—ã–±—Ä–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {selectedFiles.length}
            </h4>
            <button
              onClick={clearAll}
              disabled={isUploading}
              className="text-red-500 hover:text-red-700 text-sm disabled:opacity-50 transition-colors"
            >
              –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ
            </button>
          </div>

          <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3 max-h-64 overflow-y-auto p-2">
            {previewUrls.map((url, index) => (
              <div key={index} className="relative group">
                <div className="aspect-square rounded-lg overflow-hidden bg-gray-100 border border-gray-200">
                  <img 
                    src={url} 
                    alt={`Preview ${index}`}
                    className="w-full h-full object-cover"
                  />
                </div>
                <div className="absolute bottom-0 left-0 right-0 bg-black bg-opacity-70 text-white p-2 text-xs opacity-0 group-hover:opacity-100 transition-opacity">
                  <div className="truncate">{selectedFiles[index].name}</div>
                  <div>{(selectedFiles[index].size / 1024 / 1024).toFixed(1)} MB</div>
                </div>
                <button
                  onClick={() => removeFile(index)}
                  disabled={isUploading}
                  className="absolute -top-2 -right-2 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs opacity-0 group-hover:opacity-100 transition-opacity disabled:opacity-50"
                >
                  √ó
                </button>
              </div>
            ))}
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
          <div className="flex justify-between items-center pt-4 border-t border-gray-200">
            <div className="text-sm text-gray-600">
              {selectedFiles.length} —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
            </div>
            <div className="flex space-x-3">
              <button
                onClick={onCancel}
                disabled={isUploading}
                className="px-6 py-2 text-gray-700 bg-gray-200 rounded-lg hover:bg-gray-300 disabled:opacity-50 transition-colors"
              >
                –û—Ç–º–µ–Ω–∞
              </button>
              <button
                onClick={handleUpload}
                disabled={isUploading || selectedFiles.length === 0}
                className="px-6 py-2 bg-emerald-500 text-white rounded-lg hover:bg-emerald-600 disabled:opacity-50 disabled:cursor-not-allowed flex items-center space-x-2 transition-colors"
              >
                {isUploading ? (
                  <>
                    <div className="w-4 h-4 border-t-2 border-white rounded-full animate-spin"></div>
                    <span>–ó–∞–≥—Ä—É–∑–∫–∞...</span>
                  </>
                ) : (
                  <span>–ó–∞–≥—Ä—É–∑–∏—Ç—å</span>
                )}
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}



================================================================================
–§–ê–ô–õ: PlanSection.js
–ü–û–õ–ù–´–ô –ü–£–¢–¨: src/components/vacation/PlanSection.js
–†–ê–ó–ú–ï–†: 4961 —Å–∏–º–≤–æ–ª–æ–≤
================================================================================

// src/components/vacation/PlanSection.js
'use client';

import { useState, useEffect } from 'react';
import ActivityCard from './ActivityCard';
import CreateActivityModal from './CreateActivityModal';

export default function PlanSection({ vacation, preview = false }) {
  const [activities, setActivities] = useState([]);
  const [isLoading, setIsLoading] = useState(true);
  const [showCreateModal, setShowCreateModal] = useState(false);

  useEffect(() => {
    fetchActivities();
  }, [vacation.id]);

  const fetchActivities = async () => {
    try {
      const response = await fetch(`/api/vacations/${vacation.id}/activities`, {
        credentials: 'include'
      });
      if (response.ok) {
        const data = await response.json();
        setActivities(data);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞:', error);
    } finally {
      setIsLoading(false);
    }
  };

  const handleActivityCreated = (newActivity) => {
    setActivities(prev => [newActivity, ...prev]);
  };

  const displayedActivities = preview ? activities.slice(0, 3) : activities;

  // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ –¥–∞—Ç–∞–º
  const activitiesByDate = displayedActivities.reduce((acc, activity) => {
    const dateKey = new Date(activity.date).toISOString().split('T')[0];
    if (!acc[dateKey]) {
      acc[dateKey] = [];
    }
    acc[dateKey].push(activity);
    return acc;
  }, {});

  // –°–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∞—Ç—ã
  const sortedDates = Object.keys(activitiesByDate).sort();

  if (isLoading) {
    return (
      <div className="bg-white rounded-2xl shadow-lg p-6">
        <div className="flex justify-between items-center mb-6">
          <h2 className="text-xl font-bold text-gray-900">–ü–ª–∞–Ω—ã</h2>
          <div className="w-24 h-8 bg-gray-200 rounded animate-pulse"></div>
        </div>
        <div className="space-y-3">
          {[...Array(3)].map((_, i) => (
            <div key={i} className="h-20 bg-gray-200 rounded-lg animate-pulse"></div>
          ))}
        </div>
      </div>
    );
  }

  return (
    <div className="bg-white rounded-2xl shadow-lg p-6">
      <div className="flex justify-between items-center mb-6">
        <h2 className="text-xl font-bold text-gray-900">
          –ü–ª–∞–Ω—ã {!preview && `(${activities.length})`}
        </h2>
        
        {!preview && (
          <button 
            onClick={() => setShowCreateModal(true)}
            className="bg-emerald-500 text-white px-4 py-2 rounded-lg hover:bg-emerald-600 transition duration-200 text-sm font-medium flex items-center space-x-2"
          >
            <span>+</span>
            <span>–°–æ–∑–¥–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</span>
          </button>
        )}
      </div>

      {activities.length === 0 ? (
        <div className="text-center py-12">
          <div className="w-20 h-20 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
            <span className="text-2xl">üìÖ</span>
          </div>
          <h3 className="text-lg font-semibold text-gray-900 mb-2">
            –ü–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
          </h3>
          <p className="text-gray-600 mb-6">
            –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è –≤–∞—à–µ–≥–æ –æ—Ç–ø—É—Å–∫–∞
          </p>
          {!preview && (
            <button
              onClick={() => setShowCreateModal(true)}
              className="bg-emerald-500 text-white px-6 py-2 rounded-lg hover:bg-emerald-600 transition duration-200 font-medium"
            >
              + –°–æ–∑–¥–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
            </button>
          )}
        </div>
      ) : (
        <div className="space-y-6">
          {sortedDates.map(date => (
            <div key={date} className="space-y-3">
              <h3 className="font-semibold text-lg text-gray-900 border-b pb-2">
                {new Date(date).toLocaleDateString('ru-RU', { 
                  weekday: 'long', 
                  day: 'numeric', 
                  month: 'long',
                  year: 'numeric'
                })}
              </h3>
              <div className="space-y-3">
                {activitiesByDate[date].map((activity) => (
                  <ActivityCard 
                    key={activity.id} 
                    activity={activity} 
                    vacationId={vacation.id}
                  />
                ))}
              </div>
            </div>
          ))}
        </div>
      )}

      {preview && activities.length > 3 && (
        <div className="mt-6 pt-4 border-t border-gray-200">
          <button 
            onClick={() => window.location.href = `/vacations/${vacation.id}?tab=plans`}
            className="w-full text-center text-emerald-600 hover:text-emerald-700 font-medium py-2"
          >
            –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ {activities.length} –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π ‚Üí
          </button>
        </div>
      )}

      {showCreateModal && (
        <CreateActivityModal
          vacation={vacation}
          onClose={() => setShowCreateModal(false)}
          onCreate={handleActivityCreated}
        />
      )}
    </div>
  );
}



================================================================================
–§–ê–ô–õ: PlansTab.js
–ü–û–õ–ù–´–ô –ü–£–¢–¨: src/components/vacation/PlansTab.js
–†–ê–ó–ú–ï–†: 2384 —Å–∏–º–≤–æ–ª–æ–≤
================================================================================

// src/components/vacation/PlansTab.js
'use client';

import { useState, useEffect } from 'react';
import VacationCalendar from './VacationCalendar';
import Link from 'next/link';

export default function PlansTab({ vacationId }) {
  const [view, setView] = useState('list');
  const [activities, setActivities] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetch(`/api/vacations/${vacationId}/activities`, { credentials: 'include' })
      .then(r => r.json())
      .then(data => {
        setActivities(data);
        setLoading(false);
      })
      .catch(() => setLoading(false));
  }, [vacationId]);

  if (loading) {
    return <div className="bg-white rounded-2xl shadow-lg p-6 animate-pulse">–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶</div>;
  }

  return (
    <div className="bg-white rounded-2xl shadow-lg p-6">
      <div className="flex justify-between items-center mb-4">
        <h2 className="text-xl font-bold">–ü–ª–∞–Ω—ã</h2>
        <div className="flex space-x-2">
          <button
            onClick={() => setView('list')}
            className={`px-3 py-1 rounded ${view === 'list' ? 'bg-emerald-500 text-white' : 'bg-gray-200'}`}
          >
            –°–ø–∏—Å–æ–∫
          </button>
          <button
            onClick={() => setView('calendar')}
            className={`px-3 py-1 rounded ${view === 'calendar' ? 'bg-emerald-500 text-white' : 'bg-gray-200'}`}
          >
            –ö–∞–ª–µ–Ω–¥–∞—Ä—å
          </button>
        </div>
      </div>

      {view === 'list' ? (
        <div className="space-y-3">
          {activities.length === 0 ? (
            <p className="text-center text-gray-600 py-8">–ü–ª–∞–Ω–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç</p>
          ) : (
            activities.map(act => (
              <Link
                key={act.id}
                href={`/vacation/${vacationId}/activity/${act.id}`}
                className="block p-4 border rounded-lg hover:border-emerald-400 transition"
              >
                <div className="font-medium">{act.title}</div>
                <div className="text-sm text-gray-600">
                  {new Date(act.date).toLocaleDateString('ru-RU')}
                  {act.location && ` ‚Äì ${act.location.name}`}
                </div>
              </Link>
            ))
          )}
        </div>
      ) : (
        <VacationCalendar vacation={vacationId} activities={activities} />
      )}
    </div>
  );
}



================================================================================
–§–ê–ô–õ: SmartCapture.js
–ü–û–õ–ù–´–ô –ü–£–¢–¨: src/components/vacation/SmartCapture.js
–†–ê–ó–ú–ï–†: 4955 —Å–∏–º–≤–æ–ª–æ–≤
================================================================================

// src/components/vacation/SmartCapture.js
'use client';

import { useState, useEffect } from 'react';
import PhotoUpload from './PhotoUpload';

export default function SmartCapture({ vacation }) {
  const [limits, setLimits] = useState(null);
  const [showUpload, setShowUpload] = useState(false);
  const [uploadConfig, setUploadConfig] = useState({});
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    fetchLimits();
  }, [vacation.id]);

  const fetchLimits = async () => {
    try {
      setIsLoading(true);
      const response = await fetch(`/api/memories/capture-limits?vacationId=${vacation.id}`, {
        credentials: 'include'
      });
      
      if (response.ok) {
        const data = await response.json();
        setLimits(data);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ª–∏–º–∏—Ç–æ–≤:', error);
    } finally {
      setIsLoading(false);
    }
  };

  const openUpload = (captureType, activityId = null) => {
    setUploadConfig({ captureType, activityId });
    setShowUpload(true);
  };

  if (isLoading) {
    return (
      <div className="bg-white rounded-2xl shadow-lg p-6 animate-pulse">
        <div className="h-6 bg-gray-200 rounded w-1/2 mb-4"></div>
        <div className="space-y-3">
          {[...Array(3)].map((_, i) => (
            <div key={i} className="h-12 bg-gray-200 rounded"></div>
          ))}
        </div>
      </div>
    );
  }

  if (!limits) {
    return (
      <div className="bg-white rounded-2xl shadow-lg p-6">
        <div className="text-center text-gray-500">
          –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–∏–º–∏—Ç–∞—Ö
        </div>
      </div>
    );
  }

  const { daily, activities } = limits;

  return (
    <div className="bg-white rounded-2xl shadow-lg p-6">
      <h3 className="text-lg font-semibold mb-4">–ó–∞–ø–µ—á–∞—Ç–ª–µ—Ç—å —è—Ä–∫–∏–π –º–æ–º–µ–Ω—Ç</h3>
      
      {/* –î–Ω–µ–≤–Ω–æ–π —Å–ª–æ—Ç */}
      <CaptureSlot
        title="–ú–æ–º–µ–Ω—Ç –¥–Ω—è"
        description="3 —è—Ä–∫–∏—Ö —Ñ–æ—Ç–æ –≤ –¥–µ–Ω—å"
        used={daily.used}
        total={daily.total}
        remaining={daily.remaining}
        onClick={() => openUpload('DAILY_MOMENT')}
        type="daily"
      />

      {/* –°–ª–æ—Ç—ã –ø–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º */}
      {activities.map(activity => (
        <CaptureSlot
          key={activity.activityId}
          title={activity.title}
          description="3 —è—Ä–∫–∏—Ö —Ñ–æ—Ç–æ –Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"
          used={activity.used}
          total={activity.total}
          remaining={activity.remaining}
          onClick={() => openUpload('ACTIVITY_MOMENT', activity.activityId)}
          type="activity"
        />
      ))}

      {activities.length === 0 && (
        <div className="text-center py-4 text-gray-500 text-sm">
          –ù–∞ —Å–µ–≥–æ–¥–Ω—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –¥–ª—è –∑–∞–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è –º–æ–º–µ–Ω—Ç–æ–≤
        </div>
      )}

      {showUpload && (
        <div className="mt-6">
          <PhotoUpload
            vacationId={vacation.id}
            captureType={uploadConfig.captureType}
            activityId={uploadConfig.activityId}
            onUpload={() => {
              setShowUpload(false);
              fetchLimits(); // –û–±–Ω–æ–≤–ª—è–µ–º –ª–∏–º–∏—Ç—ã
            }}
            onCancel={() => setShowUpload(false)}
          />
        </div>
      )}
    </div>
  );
}

function CaptureSlot({ title, description, used, total, remaining, onClick, type }) {
  const disabled = remaining === 0;
  const percentage = (used / total) * 100;

  return (
    <div className={`flex items-center justify-between p-4 border rounded-lg mb-3 transition-all ${
      disabled ? 'bg-gray-50 border-gray-200' : 'bg-white border-gray-200 hover:border-emerald-300 cursor-pointer'
    }`}>
      <div className="flex-1">
        <div className="flex items-center space-x-3">
          <div className={`w-3 h-3 rounded-full ${
            type === 'daily' ? 'bg-blue-500' : 'bg-green-500'
          }`}></div>
          <div>
            <div className="font-medium text-gray-900">{title}</div>
            <div className="text-sm text-gray-600">{description}</div>
            <div className="flex items-center space-x-2 mt-1">
              <div className="w-24 bg-gray-200 rounded-full h-2">
                <div 
                  className={`h-2 rounded-full ${
                    disabled ? 'bg-red-500' : 'bg-emerald-500'
                  }`}
                  style={{ width: `${percentage}%` }}
                ></div>
              </div>
              <span className="text-xs text-gray-500">
                {used}/{total}
              </span>
            </div>
          </div>
        </div>
      </div>
      
      <button
        onClick={onClick}
        disabled={disabled}
        className={`px-4 py-2 rounded-lg font-medium transition-colors ${
          disabled 
            ? 'bg-gray-300 text-gray-500 cursor-not-allowed' 
            : 'bg-emerald-500 text-white hover:bg-emerald-600'
        }`}
      >
        {disabled ? '–õ–∏–º–∏—Ç' : `+${remaining}`}
      </button>
    </div>
  );
}



================================================================================
–§–ê–ô–õ: SmartGallery.js
–ü–û–õ–ù–´–ô –ü–£–¢–¨: src/components/vacation/SmartGallery.js
–†–ê–ó–ú–ï–†: 6952 —Å–∏–º–≤–æ–ª–æ–≤
================================================================================

// src/components/vacation/SmartGallery.js
'use client';

import { useState, useEffect } from 'react';
import MemoryGrid from './MemoryGrid';

export default function SmartGallery({ vacationId }) {
  const [view, setView] = useState('all');
  const [data, setData] = useState(null);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    fetchGallery();
  }, [vacationId, view]);

  const fetchGallery = async () => {
    try {
      setIsLoading(true);
      setError(null);
      console.log('üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –≥–∞–ª–µ—Ä–µ–∏:', { vacationId, view });
      
      const response = await fetch(`/api/vacations/${vacationId}/gallery?view=${view}`, {
        credentials: 'include',
        cache: 'no-store'
      });
      
      console.log('üì° –û—Ç–≤–µ—Ç –≥–∞–ª–µ—Ä–µ–∏:', response.status);
      
      if (!response.ok) {
        const errorText = await response.text();
        throw new Error(`HTTP ${response.status}: ${errorText}`);
      }
      
      const result = await response.json();
      console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –≥–∞–ª–µ—Ä–µ–∏ –ø–æ–ª—É—á–µ–Ω—ã:', result);
      
      // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
      if (!result || typeof result !== 'object') {
        throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö');
      }
      
      setData(result);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–∞–ª–µ—Ä–µ–∏:', error);
      setError(error.message);
    } finally {
      setIsLoading(false);
    }
  };

  const getViewTitle = () => {
    switch (view) {
      case 'all': return '–í—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏';
      case 'capture': return '–Ø—Ä–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã';
      case 'activities': return '–ü–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º';
      default: return '–ì–∞–ª–µ—Ä–µ—è';
    }
  };

  if (error) {
    return (
      <div className="bg-white rounded-2xl shadow-lg p-6">
        <div className="text-center text-red-600 py-8">
          <div className="w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4">
            <span className="text-2xl">‚ö†Ô∏è</span>
          </div>
          <h3 className="text-lg font-semibold mb-2">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–∞–ª–µ—Ä–µ–∏</h3>
          <p className="text-sm mb-4">{error}</p>
          <button 
            onClick={fetchGallery}
            className="bg-emerald-500 text-white px-6 py-2 rounded-lg hover:bg-emerald-600 transition duration-200"
          >
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </button>
        </div>
      </div>
    );
  }

  if (isLoading) {
    return (
      <div className="bg-white rounded-2xl shadow-lg p-6">
        <div className="animate-pulse">
          <div className="h-8 bg-gray-200 rounded w-1/3 mb-6"></div>
          <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
            {[...Array(8)].map((_, i) => (
              <div key={i} className="aspect-square bg-gray-200 rounded-lg"></div>
            ))}
          </div>
        </div>
      </div>
    );
  }

  if (!data) {
    return (
      <div className="bg-white rounded-2xl shadow-lg p-6">
        <div className="text-center text-gray-500 py-8">
          <div className="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
            <span className="text-2xl">üì∏</span>
          </div>
          <p>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≥–∞–ª–µ—Ä–µ—é</p>
        </div>
      </div>
    );
  }

  return (
    <div className="bg-white rounded-2xl shadow-lg p-6">
      <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-6">
        <h2 className="text-2xl font-bold text-gray-900 mb-4 sm:mb-0">
          {getViewTitle()} ({data.total || 0})
        </h2>
        
        <div className="flex space-x-2 bg-gray-100 p-1 rounded-lg">
          {[
            { id: 'all', label: '–í—Å–µ', icon: 'üñºÔ∏è' },
            { id: 'capture', label: '–Ø—Ä–∫–∏–µ', icon: '‚≠ê' },
            { id: 'activities', label: '–ü–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º', icon: 'üìÖ' }
          ].map((tab) => (
            <button
              key={tab.id}
              onClick={() => setView(tab.id)}
              className={`px-3 py-2 rounded-md text-sm font-medium transition-colors flex items-center space-x-2 ${
                view === tab.id
                  ? 'bg-white text-gray-900 shadow-sm'
                  : 'text-gray-600 hover:text-gray-900'
              }`}
            >
              <span>{tab.icon}</span>
              <span className="hidden sm:inline">{tab.label}</span>
            </button>
          ))}
        </div>
      </div>

      {/* –í—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ */}
      {view === 'all' && data.memories?.byDay && (
        <div className="space-y-8">
          {Object.entries(data.memories.byDay).map(([date, dayMemories]) => (
            <div key={date} className="space-y-4">
              <h3 className="font-semibold text-lg text-gray-900 border-b pb-2">
                {new Date(date).toLocaleDateString('ru-RU', { 
                  weekday: 'long', 
                  day: 'numeric', 
                  month: 'long',
                  year: 'numeric'
                })}
              </h3>
              <MemoryGrid 
                memories={Array.isArray(dayMemories) ? dayMemories : []} 
                showBadge={true} 
              />
            </div>
          ))}
        </div>
      )}

      {/* –Ø—Ä–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã */}
      {view === 'capture' && data.memories?.memories && (
        <MemoryGrid 
          memories={Array.isArray(data.memories.memories) ? data.memories.memories : []} 
          showBadge={true} 
        />
      )}

      {/* –ü–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º */}
      {view === 'activities' && data.memories?.byActivity && (
        <div className="space-y-8">
          {Object.entries(data.memories.byActivity).map(([activityId, activityData]) => (
            <div key={activityId} className="space-y-4">
              <h3 className="font-semibold text-lg text-gray-900 border-b pb-2">
                {activityData?.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'} ({(activityData?.memories && Array.isArray(activityData.memories)) ? activityData.memories.length : 0})
              </h3>
              <MemoryGrid 
                memories={Array.isArray(activityData?.memories) ? activityData.memories : []} 
                showBadge={false} 
              />
            </div>
          ))}
        </div>
      )}

      {(!data.total || data.total === 0) && (
        <div className="text-center py-12">
          <div className="w-24 h-24 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
            <span className="text-3xl">üì∏</span>
          </div>
          <h3 className="text-lg font-semibold text-gray-900 mb-2">
            –ü–æ–∫–∞ –Ω–µ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
          </h3>
          <p className="text-gray-600 max-w-md mx-auto">
            {view === 'all' && '–ù–∞—á–Ω–∏—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤ –≤–∞—à –æ—Ç–ø—É—Å–∫'}
            {view === 'capture' && '–ó–∞–ø–µ—á–∞—Ç–ª–µ–π—Ç–µ –ø–µ—Ä–≤—ã–µ —è—Ä–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã –≤–∞—à–µ–≥–æ –æ—Ç–ø—É—Å–∫–∞'}
            {view === 'activities' && '–î–æ–±–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º'}
          </p>
        </div>
      )}
    </div>
  );
}



================================================================================
–§–ê–ô–õ: VacationCalendar.js
–ü–û–õ–ù–´–ô –ü–£–¢–¨: src/components/vacation/VacationCalendar.js
–†–ê–ó–ú–ï–†: 2078 —Å–∏–º–≤–æ–ª–æ–≤
================================================================================

// src/components/vacation/VacationCalendar.js
'use client';

import { useState } from 'react';

export default function VacationCalendar({ vacation, activities = [] }) {
  const start = new Date(vacation.startDate);
  const end = new Date(vacation.endDate);
  const today = new Date();
  today.setHours(0, 0, 0, 0);

  const days = [];
  for (let d = new Date(start); d <= end; d.setDate(d.getDate() + 1)) {
    days.push(new Date(d));
  }

  const getActivityCount = (date) => {
    return activities.filter(a => {
      const actDate = new Date(a.date);
      actDate.setHours(0, 0, 0, 0);
      return actDate.getTime() === date.getTime();
    }).length;
  };

  return (
    <div className="bg-white rounded-2xl shadow-lg p-6">
      <h3 className="text-lg font-semibold mb-4">–ö–∞–ª–µ–Ω–¥–∞—Ä—å –æ—Ç–ø—É—Å–∫–∞</h3>
      <div className="grid grid-cols-7 gap-1 text-center text-xs">
        {['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å'].map(day => (
          <div key={day} className="font-medium text-gray-600 py-2">{day}</div>
        ))}
        {days.map((day, i) => {
          const count = getActivityCount(day);
          const isToday = day.getTime() === today.getTime();
          const isPast = day < today;
          const isFuture = day > today;

          return (
            <div
              key={i}
              className={`aspect-square flex flex-col items-center justify-center rounded-lg border ${
                isToday
                  ? 'border-emerald-500 bg-emerald-50'
                  : isPast
                  ? 'border-gray-200 bg-gray-50'
                  : 'border-gray-200'
              }`}
            >
              <span className={`text-sm ${isToday ? 'font-bold text-emerald-600' : ''}`}>
                {day.getDate()}
              </span>
              {count > 0 && (
                <span className="text-xs bg-emerald-500 text-white rounded-full w-5 h-5 flex items-center justify-center mt-1">
                  {count}
                </span>
              )}
            </div>
          );
        })}
      </div>
    </div>
  );
}



================================================================================
–§–ê–ô–õ: VacationManagement.js
–ü–û–õ–ù–´–ô –ü–£–¢–¨: src/components/vacation/VacationManagement.js
–†–ê–ó–ú–ï–†: 20697 —Å–∏–º–≤–æ–ª–æ–≤
================================================================================

// components/vacation/VacationManagement.js
'use client';

import { useState } from 'react';
import { useAuth } from '@/contexts/AuthContext';
import { useRouter } from 'next/navigation';
import InviteFriendsModal from './InviteFriendsModal';

export default function VacationManagement({ vacation, onUpdate }) {
  const { user } = useAuth();
  const router = useRouter();
  const [showInviteModal, setShowInviteModal] = useState(false);
  const [showEditModal, setShowEditModal] = useState(false);
  const [isDeleting, setIsDeleting] = useState(false);
  const [isLoading, setIsLoading] = useState(false);

  const isOwner = vacation.userId === user?.id;

  const handleDeleteVacation = async () => {
    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –æ—Ç–ø—É—Å–∫? –í—Å–µ –¥–∞–Ω–Ω—ã–µ (–ø–ª–∞–Ω—ã, –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è, —É—á–∞—Å—Ç–Ω–∏–∫–∏) –±—É–¥—É—Ç –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ —É–¥–∞–ª–µ–Ω—ã. –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
      return;
    }

    setIsDeleting(true);
    try {
      const response = await fetch(`/api/vacations/${vacation.id}`, {
        method: 'DELETE',
        credentials: 'include'
      });

      if (response.ok) {
        const result = await response.json();
        alert(`–û—Ç–ø—É—Å–∫ "${result.deletedVacation?.title || vacation.title}" —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω`);
        router.push('/my-vacations');
      } else {
        const errorData = await response.json();
        alert(errorData.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –æ—Ç–ø—É—Å–∫–∞');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –æ—Ç–ø—É—Å–∫–∞:', error);
      alert('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –æ—Ç–ø—É—Å–∫–∞');
    } finally {
      setIsDeleting(false);
    }
  };

  const handleEditVacation = async (formData) => {
    setIsLoading(true);
    try {
      const response = await fetch(`/api/vacations/${vacation.id}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(formData),
        credentials: 'include'
      });

      if (response.ok) {
        await onUpdate();
        setShowEditModal(false);
        alert('–û—Ç–ø—É—Å–∫ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!');
      } else {
        const errorData = await response.json();
        alert(errorData.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –æ—Ç–ø—É—Å–∫–∞');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–ø—É—Å–∫–∞:', error);
      alert('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –æ—Ç–ø—É—Å–∫–∞');
    } finally {
      setIsLoading(false);
    }
  };

  const handleRemoveMember = async (memberId, memberName) => {
    if (!confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å ${memberName} –∏–∑ –æ—Ç–ø—É—Å–∫–∞?`)) {
      return;
    }

    try {
      const response = await fetch(`/api/vacations/${vacation.id}/members/${memberId}`, {
        method: 'DELETE',
        credentials: 'include'
      });

      if (response.ok) {
        const result = await response.json();
        await onUpdate();
        alert(`${result.removedUser?.name || memberName} —É–¥–∞–ª–µ–Ω –∏–∑ –æ—Ç–ø—É—Å–∫–∞`);
      } else {
        const errorData = await response.json();
        alert(errorData.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞:', error);
      alert('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏');
    }
  };

  if (!isOwner) {
    return (
      <div className="bg-white rounded-2xl shadow-lg p-6">
        <div className="text-center py-8">
          <div className="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
            <span className="text-2xl">üëë</span>
          </div>
          <h3 className="text-lg font-semibold text-gray-900 mb-2">–¢–æ–ª—å–∫–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞</h3>
          <p className="text-gray-600 max-w-md mx-auto">
            –§—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é –æ—Ç–ø—É—Å–∫–∞. 
            –ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –¥–æ–±–∞–≤–∏—Ç—å –≤–∞—Å –∫–∞–∫ —Å–æ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞.
          </p>
        </div>
      </div>
    );
  }

  const totalMembers = vacation.members?.length || 1;
  const acceptedMembers = vacation.members?.filter(m => m.status === 'ACCEPTED').length || 1;
  const pendingMembers = vacation.members?.filter(m => m.status === 'PENDING').length || 0;

  return (
    <div className="space-y-6">
      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –±—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
        <div className="bg-white rounded-xl p-4 shadow-sm border border-gray-200">
          <div className="text-2xl font-bold text-gray-900">{acceptedMembers}</div>
          <div className="text-sm text-gray-600">–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤</div>
        </div>
        <div className="bg-white rounded-xl p-4 shadow-sm border border-gray-200">
          <div className="text-2xl font-bold text-gray-900">{vacation._count?.activities || 0}</div>
          <div className="text-sm text-gray-600">–ü–ª–∞–Ω–æ–≤</div>
        </div>
        <div className="bg-white rounded-xl p-4 shadow-sm border border-gray-200">
          <div className="text-2xl font-bold text-gray-900">{vacation._count?.memories || 0}</div>
          <div className="text-sm text-gray-600">–í–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–π</div>
        </div>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        {/* –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥—Ä—É–∑–µ–π */}
        <div className="bg-white rounded-2xl shadow-lg p-6">
          <div className="flex items-center space-x-3 mb-4">
            <div className="w-12 h-12 bg-emerald-100 rounded-xl flex items-center justify-center">
              <span className="text-xl">üë•</span>
            </div>
            <div>
              <h3 className="text-lg font-semibold text-gray-900">–£—á–∞—Å—Ç–Ω–∏–∫–∏</h3>
              <p className="text-sm text-gray-600">
                {acceptedMembers} —É—á–∞—Å—Ç–Ω–∏–∫{acceptedMembers === 1 ? '' : '–∞'}
                {pendingMembers > 0 && `, ${pendingMembers} –æ–∂–∏–¥–∞–µ—Ç`}
              </p>
            </div>
          </div>
          <button
            onClick={() => setShowInviteModal(true)}
            className="w-full bg-emerald-500 text-white py-3 rounded-lg hover:bg-emerald-600 transition duration-200 font-semibold shadow-md hover:shadow-lg transform hover:-translate-y-0.5 transition-all"
          >
            –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π
          </button>
        </div>

        {/* –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—É—Å–∫–∞ */}
        <div className="bg-white rounded-2xl shadow-lg p-6">
          <div className="flex items-center space-x-3 mb-4">
            <div className="w-12 h-12 bg-blue-100 rounded-xl flex items-center justify-center">
              <span className="text-xl">‚úèÔ∏è</span>
            </div>
            <div>
              <h3 className="text-lg font-semibold text-gray-900">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</h3>
              <p className="text-sm text-gray-600">–î–∞—Ç—ã, –Ω–∞–∑–≤–∞–Ω–∏–µ, –æ–ø–∏—Å–∞–Ω–∏–µ</p>
            </div>
          </div>
          <button
            onClick={() => setShowEditModal(true)}
            className="w-full bg-blue-500 text-white py-3 rounded-lg hover:bg-blue-600 transition duration-200 font-semibold shadow-md hover:shadow-lg transform hover:-translate-y-0.5 transition-all"
          >
            –ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç–ø—É—Å–∫
          </button>
        </div>
      </div>

      {/* –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ */}
      <div className="bg-white rounded-2xl shadow-lg p-6">
        <div className="flex justify-between items-center mb-4">
          <h3 className="text-lg font-semibold text-gray-900">–í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏</h3>
          <span className="text-sm text-gray-500 bg-gray-100 px-2 py-1 rounded-full">
            {totalMembers} –≤—Å–µ–≥–æ
          </span>
        </div>
        
        {vacation.members?.length === 0 ? (
          <div className="text-center py-8">
            <div className="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <span className="text-2xl">üë§</span>
            </div>
            <p className="text-gray-600">–ü–æ–∫–∞ –Ω–µ—Ç –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</p>
            <p className="text-sm text-gray-500 mt-1">–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –æ—Ç–ø—É—Å–∫—É</p>
          </div>
        ) : (
          <div className="space-y-3">
            {/* –í–ª–∞–¥–µ–ª–µ—Ü */}
            <div className="flex items-center justify-between p-4 border border-gray-200 rounded-lg bg-blue-50">
              <div className="flex items-center space-x-3 flex-1 min-w-0">
                <div className="w-10 h-10 bg-gradient-to-r from-blue-400 to-blue-600 rounded-full flex items-center justify-center text-white font-medium flex-shrink-0">
                  {vacation.user.avatar ? (
                    <img
                      src={vacation.user.avatar}
                      alt={vacation.user.name}
                      className="w-full h-full rounded-full object-cover"
                    />
                  ) : (
                    vacation.user.name.charAt(0).toUpperCase()
                  )}
                </div>
                <div className="flex-1 min-w-0">
                  <div className="font-medium text-gray-900 truncate">
                    {vacation.user.name}
                    <span className="ml-2 text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded-full">
                      –í–ª–∞–¥–µ–ª–µ—Ü
                    </span>
                  </div>
                  <div className="text-sm text-gray-500 truncate">@{vacation.user.usertag}</div>
                </div>
              </div>
            </div>

            {/* –û—Å—Ç–∞–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ */}
            {vacation.members?.map((member) => (
              member.userId !== vacation.userId && (
                <div key={member.id} className="flex items-center justify-between p-4 border border-gray-200 rounded-lg hover:border-gray-300 transition-colors">
                  <div className="flex items-center space-x-3 flex-1 min-w-0">
                    <div className="w-10 h-10 bg-gradient-to-r from-emerald-400 to-teal-500 rounded-full flex items-center justify-center text-white font-medium flex-shrink-0">
                      {member.user.avatar ? (
                        <img
                          src={member.user.avatar}
                          alt={member.user.name}
                          className="w-full h-full rounded-full object-cover"
                        />
                      ) : (
                        member.user.name.charAt(0).toUpperCase()
                      )}
                    </div>
                    <div className="flex-1 min-w-0">
                      <div className="font-medium text-gray-900 truncate">
                        {member.user.name}
                        {member.role === 'CO_ORGANIZER' && (
                          <span className="ml-2 text-xs bg-purple-100 text-purple-800 px-2 py-1 rounded-full">
                            –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä
                          </span>
                        )}
                      </div>
                      <div className="text-sm text-gray-500 truncate">@{member.user.usertag}</div>
                    </div>
                  </div>
                  
                  <div className="flex items-center space-x-3">
                    <div className={`text-sm px-3 py-1 rounded-full ${
                      member.status === 'ACCEPTED' 
                        ? 'bg-green-100 text-green-800'
                        : 'bg-yellow-100 text-yellow-800'
                    }`}>
                      {member.status === 'ACCEPTED' ? '–£—á–∞—Å—Ç–Ω–∏–∫' : '–û–∂–∏–¥–∞–µ—Ç'}
                    </div>
                    
                    <button
                      onClick={() => handleRemoveMember(member.id, member.user.name)}
                      className="text-red-500 hover:text-red-700 p-1 rounded transition-colors"
                      title="–£–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞"
                    >
                      <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                      </svg>
                    </button>
                  </div>
                </div>
              )
            ))}
          </div>
        )}
      </div>

      {/* –û–ø–∞—Å–Ω–∞—è –∑–æ–Ω–∞ */}
      <div className="bg-white rounded-2xl shadow-lg p-6 border border-red-200">
        <div className="flex items-center space-x-3 mb-4">
          <div className="w-12 h-12 bg-red-100 rounded-xl flex items-center justify-center">
            <span className="text-xl">‚ö†Ô∏è</span>
          </div>
          <div className="flex-1">
            <h3 className="text-lg font-semibold text-red-700">–û–ø–∞—Å–Ω–∞—è –∑–æ–Ω–∞</h3>
            <p className="text-sm text-gray-600">
              –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–ø—É—Å–∫–∞ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å. –í—Å–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ —É–¥–∞–ª–µ–Ω—ã.
            </p>
          </div>
        </div>
        <div className="bg-red-50 border border-red-200 rounded-lg p-4 mb-4">
          <p className="text-sm text-red-700">
            <strong>–ë—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ:</strong> –≤—Å–µ –ø–ª–∞–Ω—ã, –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è, —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, —É—á–∞—Å—Ç–Ω–∏–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–ø—É—Å–∫–∞.
          </p>
        </div>
        <button
          onClick={handleDeleteVacation}
          disabled={isDeleting}
          className="bg-red-500 text-white px-6 py-3 rounded-lg hover:bg-red-600 transition duration-200 disabled:opacity-50 disabled:cursor-not-allowed font-semibold w-full flex items-center justify-center space-x-2"
        >
          {isDeleting ? (
            <>
              <div className="w-4 h-4 border-t-2 border-white rounded-full animate-spin"></div>
              <span>–£–¥–∞–ª–µ–Ω–∏–µ...</span>
            </>
          ) : (
            <>
              <span>üóëÔ∏è</span>
              <span>–£–¥–∞–ª–∏—Ç—å –æ—Ç–ø—É—Å–∫</span>
            </>
          )}
        </button>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ */}
      {showInviteModal && (
        <InviteFriendsModal
          vacation={vacation}
          onClose={() => setShowInviteModal(false)}
          onInvite={onUpdate}
        />
      )}

      {showEditModal && (
        <EditVacationModal
          vacation={vacation}
          onSubmit={handleEditVacation}
          onCancel={() => setShowEditModal(false)}
          isLoading={isLoading}
        />
      )}
    </div>
  );
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–ø—É—Å–∫–∞
function EditVacationModal({ vacation, onSubmit, onCancel, isLoading }) {
  const [formData, setFormData] = useState({
    title: vacation.title,
    description: vacation.description || '',
    destination: vacation.destination || '',
    startDate: vacation.startDate.split('T')[0],
    endDate: vacation.endDate.split('T')[0],
    coverImage: vacation.coverImage || '',
    isPublic: vacation.isPublic || false
  });

  const handleSubmit = (e) => {
    e.preventDefault();
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!formData.title.trim()) {
      alert('–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–ø—É—Å–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ');
      return;
    }
    
    if (!formData.startDate || !formData.endDate) {
      alert('–î–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã');
      return;
    }
    
    if (new Date(formData.startDate) > new Date(formData.endDate)) {
      alert('–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–∑–∂–µ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è');
      return;
    }
    
    onSubmit(formData);
  };

  const handleChange = (e) => {
    const { name, value, type, checked } = e.target;
    setFormData(prev => ({ 
      ...prev, 
      [name]: type === 'checkbox' ? checked : value 
    }));
  };

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
      <div className="bg-white rounded-2xl p-6 w-full max-w-md max-h-[90vh] overflow-y-auto">
        <div className="flex justify-between items-center mb-6">
          <h2 className="text-xl font-bold text-gray-900">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–ø—É—Å–∫</h2>
          <button
            onClick={onCancel}
            className="text-gray-500 hover:text-gray-700 text-2xl"
            disabled={isLoading}
          >
            √ó
          </button>
        </div>

        <form onSubmit={handleSubmit} className="space-y-4">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–ø—É—Å–∫–∞ *
            </label>
            <input
              type="text"
              name="title"
              value={formData.title}
              onChange={handleChange}
              required
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –æ—Ç–ø—É—Å–∫–∞"
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ú–µ—Å—Ç–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
            </label>
            <input
              type="text"
              name="destination"
              value={formData.destination}
              onChange={handleChange}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              placeholder="–ö—É–¥–∞ –µ–¥–µ—Ç–µ?"
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –û–ø–∏—Å–∞–Ω–∏–µ
            </label>
            <textarea
              name="description"
              value={formData.description}
              onChange={handleChange}
              rows={3}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç–ø—É—Å–∫–∞..."
            />
          </div>

          <div className="grid grid-cols-2 gap-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ù–∞—á–∞–ª–æ *
              </label>
              <input
                type="date"
                name="startDate"
                value={formData.startDate}
                onChange={handleChange}
                required
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ö–æ–Ω–µ—Ü *
              </label>
              <input
                type="date"
                name="endDate"
                value={formData.endDate}
                onChange={handleChange}
                required
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              />
            </div>
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              URL –æ–±–ª–æ–∂–∫–∏
            </label>
            <input
              type="url"
              name="coverImage"
              value={formData.coverImage}
              onChange={handleChange}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
              placeholder="https://example.com/image.jpg"
            />
          </div>

          <div className="flex items-center">
            <input
              type="checkbox"
              name="isPublic"
              checked={formData.isPublic}
              onChange={handleChange}
              className="w-4 h-4 text-emerald-600 border-gray-300 rounded focus:ring-emerald-500"
            />
            <label className="ml-2 text-sm text-gray-700">
              –°–¥–µ–ª–∞—Ç—å –æ—Ç–ø—É—Å–∫ –ø—É–±–ª–∏—á–Ω—ã–º
            </label>
          </div>

          <div className="flex space-x-3 pt-4">
            <button
              type="button"
              onClick={onCancel}
              disabled={isLoading}
              className="flex-1 px-6 py-3 text-gray-700 bg-gray-200 rounded-lg hover:bg-gray-300 transition duration-200 disabled:opacity-50"
            >
              –û—Ç–º–µ–Ω–∞
            </button>
            <button
              type="submit"
              disabled={isLoading}
              className="flex-1 px-6 py-3 bg-emerald-500 text-white rounded-lg hover:bg-emerald-600 transition duration-200 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2"
            >
              {isLoading ? (
                <>
                  <div className="w-4 h-4 border-t-2 border-white rounded-full animate-spin"></div>
                  <span>–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...</span>
                </>
              ) : (
                <span>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</span>
              )}
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}



================================================================================
–§–ê–ô–õ: VacationTimer.js
–ü–û–õ–ù–´–ô –ü–£–¢–¨: src/components/vacation/VacationTimer.js
–†–ê–ó–ú–ï–†: 5445 —Å–∏–º–≤–æ–ª–æ–≤
================================================================================

// components/vacation/VacationTimer.js
'use client';

import { useState, useEffect } from 'react';

export default function VacationTimer({ vacation }) {
  const [timeLeft, setTimeLeft] = useState({
    status: 'upcoming',
    days: 0,
    hours: 0,
    minutes: 0
  });

  useEffect(() => {
    const calculateTimeLeft = () => {
      const now = new Date();
      const startDate = new Date(vacation.startDate);
      const endDate = new Date(vacation.endDate);
      
      if (now < startDate) {
        const diff = startDate - now;
        return {
          status: 'upcoming',
          days: Math.floor(diff / (1000 * 60 * 60 * 24)),
          hours: Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),
          minutes: Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60))
        };
      } else if (now <= endDate) {
        const diff = endDate - now;
        return {
          status: 'current',
          days: Math.floor(diff / (1000 * 60 * 60 * 24)),
          hours: Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),
          minutes: Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60))
        };
      } else {
        return {
          status: 'past',
          days: 0,
          hours: 0,
          minutes: 0
        };
      }
    };

    setTimeLeft(calculateTimeLeft());
    
    const timer = setInterval(() => {
      setTimeLeft(calculateTimeLeft());
    }, 60000);

    return () => clearInterval(timer);
  }, [vacation]);

  const getStatusConfig = () => {
    switch (timeLeft.status) {
      case 'upcoming':
        return {
          title: '–î–æ –Ω–∞—á–∞–ª–∞ –æ—Ç–ø—É—Å–∫–∞',
          gradient: 'from-blue-500 to-cyan-500',
          emoji: 'üõ©Ô∏è',
          description: '–°–∫–æ—Ä–æ –Ω–∞—á–Ω–µ—Ç—Å—è –≤–∞—à–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ!'
        };
      case 'current':
        return {
          title: '–î–æ –∫–æ–Ω—Ü–∞ –æ—Ç–ø—É—Å–∫–∞',
          gradient: 'from-green-500 to-emerald-500',
          emoji: 'üéâ',
          description: '–ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –∫–∞–∂–¥—ã–º –º–æ–º–µ–Ω—Ç–æ–º!'
        };
      case 'past':
        return {
          title: '–û—Ç–ø—É—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω',
          gradient: 'from-purple-500 to-pink-500',
          emoji: 'üèÜ',
          description: '–ù–∞–¥–µ–µ–º—Å—è, –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ!'
        };
      default:
        return {
          title: '–û—Ç–ø—É—Å–∫',
          gradient: 'from-gray-500 to-gray-600',
          emoji: 'üìÖ',
          description: ''
        };
    }
  };

  const config = getStatusConfig();

  const getDaysText = (days) => {
    const lastDigit = days % 10;
    const lastTwoDigits = days % 100;
    
    if (lastTwoDigits >= 11 && lastTwoDigits <= 14) {
      return '–¥–Ω–µ–π';
    }
    
    if (lastDigit === 1) {
      return '–¥–µ–Ω—å';
    }
    
    if (lastDigit >= 2 && lastDigit <= 4) {
      return '–¥–Ω—è';
    }
    
    return '–¥–Ω–µ–π';
  };

  return (
    <div className="bg-white rounded-2xl shadow-lg p-6">
      <div className="text-center">
        <div className={`bg-gradient-to-r ${config.gradient} text-white rounded-2xl p-8 max-w-md mx-auto shadow-xl`}>
          <div className="text-4xl mb-4 transform hover:scale-110 transition-transform duration-300">
            {config.emoji}
          </div>
          
          <h2 className="text-2xl font-bold mb-2 drop-shadow-sm">{config.title}</h2>
          <p className="text-white/80 mb-6 text-sm">{config.description}</p>
          
          {timeLeft.status !== 'past' ? (
            <div className="bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20">
              <div className="flex justify-center space-x-6">
                <div className="text-center">
                  <div className="text-4xl font-bold drop-shadow-md">{timeLeft.days}</div>
                  <div className="text-sm opacity-90 mt-1">{getDaysText(timeLeft.days)}</div>
                </div>
                <div className="text-center">
                  <div className="text-4xl font-bold drop-shadow-md">{timeLeft.hours}</div>
                  <div className="text-sm opacity-90 mt-1">—á–∞—Å–æ–≤</div>
                </div>
                <div className="text-center">
                  <div className="text-4xl font-bold drop-shadow-md">{timeLeft.minutes}</div>
                  <div className="text-sm opacity-90 mt-1">–º–∏–Ω</div>
                </div>
              </div>
            </div>
          ) : (
            <div className="bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20">
              <p className="text-lg font-semibold">–í—Ä–µ–º—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è!</p>
              <p className="text-sm opacity-90 mt-2">–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ –∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏</p>
            </div>
          )}
          
          <div className="mt-6 pt-4 border-t border-white/20">
            <div className="text-sm opacity-80">
              {new Date(vacation.startDate).toLocaleDateString('ru-RU', { 
                day: 'numeric', 
                month: 'long', 
                year: 'numeric' 
              })} - {new Date(vacation.endDate).toLocaleDateString('ru-RU', { 
                day: 'numeric', 
                month: 'long', 
                year: 'numeric' 
              })}
            </div>
            {vacation.destination && (
              <div className="text-sm opacity-80 mt-1 flex items-center justify-center">
                <span className="mr-1">üìç</span>
                {vacation.destination}
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}


